{"version":3,"sources":["routes/algolia/urlSync.js","routes/algolia/Header.js","routes/algolia/SideBar.js","routes/algolia/Footer.js","routes/algolia/ProductItem.js","routes/algolia/ProductList.js","routes/algolia/index.js"],"names":["App","updateAfter","searchStateToUrl","searchState","concat","window","location","pathname","qs","stringify","ConnectedSearchBox","connectSearchBox","_ref","currentRefinement","refine","react_default","a","createElement","className","type","placeholder","value","onChange","e","target","autoComplete","id","AlgoliaHeader","SortBy","items","label","defaultRefinement","Sider","Layout","Sidebar","ClearRefinements","translations","reset","HierarchicalMenu","attributes","Panel","header","RefinementList","attribute","operator","limit","searchable","RatingMenu","max","RangeInput","href","Footer","children","ProductItem","item","console","log","icons","i","suffixClassName","rating","suffixXlink","push","key","aria-hidden","width","height","xlinkHref","src","image","alt","Highlight","hit","price","ProductList","hits","row","map","product","col","xl","lg","md","sm","xs","algolia_ProductItem","objectID","Content","CustomResults","connectStateResults","searchResult","nbHits","query","Stats","ConnectedProducts","connectHits","withUrlSync","props","InstantSearch","appId","apiKey","indexName","createURL","onSearchStateChange","Configure","hitsPerPage","layout","SideBar","Header","Pagination","showLast","_Component","urlSync","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clearTimeout","debouncedSetState","setTimeout","history","pushState","setState","state","parse","search","slice","addEventListener","inherits","createClass","assign","Component"],"mappings":"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","file":"static/js/121.8b02ee93.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport qs from 'qs';\n\nconst updateAfter = 700;\nconst searchStateToUrl = searchState =>\n  searchState ? `${window.location.pathname}?${qs.stringify(searchState)}` : '';\n\nexport const withUrlSync = App =>\n  class urlSync extends Component {\n    onSearchStateChange = searchState => {\n      clearTimeout(this.debouncedSetState);\n      this.debouncedSetState = setTimeout(() => {\n        window.history.pushState(\n          searchState,\n          null,\n          searchStateToUrl(searchState)\n        );\n      }, updateAfter);\n      this.setState({searchState});\n    };\n\n    constructor() {\n      super();\n      this.state = {searchState: qs.parse(window.location.search.slice(1))};\n      window.addEventListener('popstate', ({state: searchState}) =>\n        this.setState({searchState})\n      );\n    }\n\n    render() {\n      return (\n        <App\n          {...this.props}\n          searchState={this.state.searchState}\n          onSearchStateChange={this.onSearchStateChange}\n          createURL={searchStateToUrl}\n        />\n      );\n    }\n  };\n","import React from \"react\";\nimport {connectSearchBox, SortBy} from \"react-instantsearch-dom\";\n\nconst AlgoliaHeader = () => (\n  <div className=\"gx-algolia-header\">\n    <ConnectedSearchBox/>\n    <div className=\"gx-algolia-sort-by\">\n      <label>Sort by</label>\n      <SortBy\n        items={[\n          {value: 'ikea', label: 'Featured'},\n          {value: 'ikea_price_asc', label: 'Price asc.'},\n          {value: 'ikea_price_desc', label: 'Price desc.'},\n        ]}\n        defaultRefinement=\"ikea\"\n      />\n    </div>\n  </div>\n);\nconst CustomSearchBox = ({currentRefinement, refine}) => (\n  <div className=\"gx-search-bar gx-lt-icon-search-bar\">\n    <div className=\"gx-form-group\">\n      <input\n        type=\"search\"\n        placeholder=\"Search here...\"\n        value={currentRefinement}\n        onChange={e => refine(e.target.value)}\n        autoComplete=\"off\"\n        className=\"ant-input form-control\"\n        id=\"q\"\n      />\n      <span className=\"gx-search-icon gx-pointer\"><i className=\"icon icon-search\"/></span>\n    </div>\n  </div>\n);\nconst ConnectedSearchBox = connectSearchBox(CustomSearchBox);\n\nexport default AlgoliaHeader;\n","import React from \"react\";\nimport {Layout} from \"antd\";\nimport {\n  ClearRefinements,\n  HierarchicalMenu,\n  Panel,\n  RangeInput,\n  RatingMenu,\n  RefinementList,\n} from \"react-instantsearch-dom\";\n\nconst {Sider} = Layout;\nconst Sidebar = () => (\n  <Sider className=\"gx-algolia-sidebar\">\n    <div className=\"gx-algolia-sidebar-content\">\n      <ClearRefinements\n        translations={{\n          reset: 'Clear all filters',\n        }}\n      />\n\n      <div className=\"gx-algolia-category-item\">\n        <div className=\"gx-algolia-category-title\">Show results for</div>\n        <HierarchicalMenu\n          attributes={['category', 'sub_category', 'sub_sub_category']}\n        />\n      </div>\n\n      <div className=\"gx-algolia-category-item\">\n        <div className=\"gx-algolia-category-title\">Refine By</div>\n\n        <Panel header={<span>Type</span>}>\n          <RefinementList className=\"gx-algolia-refinementList\" attribute=\"type\" operator=\"or\" limit={5} searchable/>\n        </Panel>\n\n        <Panel header={<span>Materials</span>}>\n          <RefinementList className=\"gx-algolia-refinementList\"\n                          attribute=\"materials\"\n                          operator=\"or\"\n                          limit={5}\n                          searchable\n          />\n        </Panel>\n\n\n        <Panel header={<span>Rating</span>}>\n          <RatingMenu className=\"gx-algolia-refinementList\" attribute=\"rating\" max={5}/>\n        </Panel>\n\n        <Panel header={<span>Price</span>}>\n          <RangeInput className=\"gx-algolia-refinementList\" attribute=\"price\"/>\n        </Panel>\n      </div>\n\n      <div className=\"thank-you\">\n        Data courtesy of <a href=\"http://www.ikea.com/\">ikea.com</a>\n      </div>\n    </div>\n  </Sider>\n);\n\n\nexport default Sidebar;\n\n","import React from \"react\";\n\nexport default ({children}) =>\n  <div className=\"gx-algolia-footer\">\n    {children}\n  </div>\n","import React from \"react\";\nimport {Highlight,} from 'react-instantsearch-dom';\n\n\nconst ProductItem = ({item}) => {\n  console.log(item);\n  const icons = [];\n  for (let i = 0; i < 5; i++) {\n    const suffixClassName = i >= item.rating ? '--empty' : '';\n    const suffixXlink = i >= item.rating ? 'Empty' : '';\n\n    icons.push(\n      <svg\n        key={i}\n        className={`ais-RatingMenu-starIcon ais-RatingMenu-starIcon${suffixClassName}`}\n        aria-hidden=\"true\"\n        width=\"24\"\n        height=\"24\"\n      >\n        <use xlinkHref={`#ais-RatingMenu-star${suffixXlink}Symbol`}/>\n      </svg>\n    );\n  }\n  return (\n    <div className=\"gx-product-item gx-product-vertical\">\n      <div className=\"gx-product-image\">\n        <img\n          src={`https://res.cloudinary.com/hilnmyskv/image/fetch/h_300,q_100,f_auto/${\n            item.image\n            }`} alt=''\n        />\n      </div>\n      <div className=\"gx-product-body\">\n\n        <div className=\"gx-product-name\">\n          <Highlight attribute=\"name\" hit={item}/>\n        </div>\n        <div className=\"gx-mb-3\">\n          <Highlight attribute=\"type\" hit={item}/>\n        </div>\n        <div className=\"ais-RatingMenu-link\">{icons}</div>\n        <div className=\"gx-product-price\">${item.price}</div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default ProductItem;\n","import React from 'react';\nimport {Col, Row} from 'antd';\n\nimport ProductItem from './ProductItem';\n\nconst ProductList = ({hits}) => {\n  return (\n    <div id=\"product\">\n      <Row>\n        {hits.map(product => (\n          <Col xl={8} lg={12} md={12} sm={12} xs={24}>\n            <ProductItem item={product} key={product.objectID}/>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\nexport default ProductList;\n","import React from 'react';\nimport {Layout} from \"antd\";\nimport {Configure, connectHits, connectStateResults, InstantSearch, Pagination, Stats,} from 'react-instantsearch-dom';\nimport {withUrlSync} from './urlSync';\nimport 'instantsearch.css/themes/algolia.css';\n//import './style.css'\nimport Header from \"./Header\";\nimport Sidebar from \"./SideBar\";\nimport Footer from \"./Footer\";\nimport ProductList from \"./ProductList\";\n\nconst {Content} = Layout;\n\nconst App = props => (\n  <InstantSearch className=\"gx-main-content\"\n                 appId=\"latency\"// use your key here\n                 apiKey=\"6be0576ff61c053d5f9a3225e2a90f76\"// use your key here\n                 indexName=\"ikea\"\n                 searchState={props.searchState}\n                 createURL={props.createURL}\n                 onSearchStateChange={props.onSearchStateChange}>\n\n    <Configure hitsPerPage={16}/>\n\n    <Layout className=\"gx-algolia-layout-has-sider\">\n      <Sidebar/>\n      <div className=\"gx-algolia-main\">\n        <Header/>\n        <Content className=\"gx-algolia-content\">\n          <CustomResults/>\n        </Content>\n        <Footer>\n          <Pagination showLast={true}/>\n        </Footer>\n      </div>\n    </Layout>\n  </InstantSearch>\n);\n\n\nconst CustomResults = connectStateResults(({searchState, searchResult}) => {\n  if (searchResult && searchResult.nbHits === 0) {\n    return (\n      <div className=\"gx-algolia-content-inner\">\n        <div className=\"gx-algolia-no-results\">\n          No results found matching{' '}\n          <span className=\"gx-algolia-query\">{searchState.query}</span>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"gx-algolia-content-inner\">\n        <Stats/>\n        <ConnectedProducts/>\n      </div>\n    );\n  }\n});\n\nconst ConnectedProducts = connectHits(ProductList);\n\nexport default withUrlSync(App);\n"],"sourceRoot":""}