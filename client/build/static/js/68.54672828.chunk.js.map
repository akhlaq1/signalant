{"version":3,"sources":["../node_modules/@amcharts/amcharts3-react/index.js","../node_modules/@amcharts/amcharts3-react/amcharts3-react.js","routes/extensions/map/ammap/groupedCountries/Components/GroupedCountriesMap.js","routes/extensions/map/ammap/groupedCountries/index.js"],"names":["window","React","__webpack_require__","ReactDOM","createReactClass","module","exports","AmCharts","getType","x","toString","call","hasOwnKey","obj","key","hasOwnProperty","copy","length","output","Array","i","copyArray","copyObject","Date","getTime","isNaN","removeChartListeners","chart","y","xLength","yLength","xValue","has","j","yValue","event","method","removeListener","update","didUpdate","xType","a","updateArray","updateObject","isNumberEqual","oldObj","newObj","id","getInitialState","componentDidMount","props","this","options","makeChart","state","delay","setState","componentDidUpdate","oldProps","validateNow","componentWillUnmount","clear","render","createElement","className","style","GroupedCountriesMap","react_default","amcharts3_react_default","width","height","type","theme","dataProvider","map","zoomLevel","zoomLongitude","zoomLatitude","areas","title","color","customData","groupId","areasSettings","rollOverOutlineColor","rollOverColor","alpha","unlistedAreasAlpha","balloonText","legend","marginRight","marginLeft","equalWidths","backgroundAlpha","backgroundColor","borderColor","borderAlpha","top","left","horizontalGap","data","export","enabled","GroupedCountries","card","IntlMessages","Components_GroupedCountriesMap"],"mappings":"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AS,SACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,cACV,CACDH,MAAS,QACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,cACV,CACDH,MAAS,SACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,cACV,CACDH,MAAS,UACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,cACV,CACDH,MAAS,UACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,cACV,CACDH,MAAS,aACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,cACV,CACDH,MAAS,cACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,cACV,CACDH,MAAS,WACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,cACV,CACDH,MAAS,YACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,SACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,kBACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,WACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,WACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,UACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,UACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,SACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,QACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,SACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,UACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,WACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,QACV,CACDH,MAAS,UACThC,GAAM,KACNiC,MAAS,UACTC,WAAc,OACdC,QAAW,UAKfC,cAAiB,CACfC,qBAAwB,UACxBC,cAAiB,UACjBC,MAAS,GACTC,mBAAsB,GACtBC,YAAe,yCAIjBC,OAAU,CACRpB,MAAS,OACTqB,YAAe,GACfC,WAAc,GACdC,aAAe,EACfC,gBAAmB,GACnBC,gBAAmB,UACnBC,YAAe,UACfC,YAAe,EACfC,IAAO,IACPC,KAAQ,EACRC,cAAiB,GACjBC,KAAQ,CAAC,CACPrB,MAAS,wBACTC,MAAS,WACR,CACDD,MAAS,iBACTC,MAAS,WACR,CACDD,MAAS,iBACTC,MAAS,WACR,CACDD,MAAS,iBACTC,MAAS,aAGbqB,OAAU,CACRC,SAAW,eC/MFC,UARU,WACvB,OACEpC,EAAA1B,EAAAsB,cAACyC,EAAA,EAAD,CAAMxC,UAAU,UAAUe,MAAOZ,EAAA1B,EAAAsB,cAAC0C,EAAA,EAAD,CAAc1D,GAAG,mCAChDoB,EAAA1B,EAAAsB,cAAC2C,EAAD","file":"static/js/68.54672828.chunk.js","sourcesContent":["if (typeof window !== \"undefined\") {\n  window.React = require(\"react\");\n  window.ReactDOM = require(\"react-dom\");\n  window.createReactClass = require(\"create-react-class\");\n\n  require(\"./amcharts3-react.js\");\n\n  module.exports = window.AmCharts;\n} else {\n  module.exports = {};\n}","(function () {\n  function getType(x) {\n    // TODO make this faster ?\n    return {}.toString.call(x);\n  }\n\n  function hasOwnKey(obj, key) {\n    return {}.hasOwnProperty.call(obj, key);\n  }\n\n  function copyObject(x) {\n    var output = {}; // TODO use Object.keys ?\n\n    for (var key in x) {\n      if (hasOwnKey(x, key)) {\n        output[key] = copy(x[key]);\n      }\n    }\n\n    return output;\n  }\n\n  function copyArray(x) {\n    var length = x.length;\n    var output = new Array(length);\n\n    for (var i = 0; i < length; ++i) {\n      output[i] = copy(x[i]);\n    }\n\n    return output;\n  } // TODO can this be made faster ?\n  // TODO what about regexps, etc. ?\n\n\n  function copy(x) {\n    switch (getType(x)) {\n      case \"[object Array]\":\n        return copyArray(x);\n\n      case \"[object Object]\":\n        return copyObject(x);\n      // TODO is this necessary ?\n\n      case \"[object Date]\":\n        return new Date(x.getTime());\n\n      default:\n        return x;\n    }\n  }\n\n  function isNaN(x) {\n    return x !== x;\n  }\n\n  function isNumberEqual(x, y) {\n    return x === y || isNaN(x) && isNaN(y);\n  }\n\n  function removeChartListeners(chart, x, y) {\n    if (x !== y) {\n      // TODO is this necessary ?\n      if (x == null) {\n        x = [];\n      } // TODO is this necessary ?\n\n\n      if (y == null) {\n        y = [];\n      }\n\n      var xLength = x.length;\n      var yLength = y.length;\n\n      for (var i = 0; i < xLength; ++i) {\n        var xValue = x[i];\n        var has = false; // TODO make this faster ?\n\n        for (var j = 0; j < yLength; ++j) {\n          var yValue = y[j]; // TODO is this correct ?\n\n          if (xValue.event === yValue.event && xValue.method === yValue.method) {\n            has = true;\n            break;\n          }\n        }\n\n        if (!has) {\n          // TODO is this correct ?\n          chart.removeListener(chart, xValue.event, xValue.method);\n        }\n      }\n    }\n  }\n\n  function updateArray(a, x, y) {\n    var didUpdate = false;\n\n    if (x !== y) {\n      var xLength = x.length;\n      var yLength = y.length;\n\n      if (xLength !== yLength) {\n        a.length = yLength;\n        didUpdate = true;\n      }\n\n      for (var i = 0; i < yLength; ++i) {\n        if (i < xLength) {\n          if (update(a, i, x[i], y[i])) {\n            didUpdate = true;\n          }\n        } else {\n          // TODO make this faster ?\n          a[i] = copy(y[i]); // TODO is this necessary ?\n\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  function update(obj, key, x, y) {\n    var didUpdate = false;\n\n    if (x !== y) {\n      // https://github.com/amcharts/amcharts3-react/issues/40\n      if (hasOwnKey(obj, key)) {\n        var xType = getType(x);\n        var yType = getType(y);\n\n        if (xType === yType) {\n          switch (xType) {\n            case \"[object Array]\":\n              // TODO hacky, remove this after the following bug is fixed:\n              //      Zendesk #28040\n              //      https://codepen.io/team/amcharts/pen/0d61f559cda74682c0ca55d9a24a0f77\n              //      https://www.amcharts.com/kbase/forcing-grouping-stock-chart-data-specific-periods/\n              if (key === \"groupToPeriods\") {\n                // TODO is the copy necessary ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              } else {\n                if (updateArray(obj[key], x, y)) {\n                  didUpdate = true;\n                }\n              }\n\n              break;\n\n            case \"[object Object]\":\n              if (updateObject(obj[key], x, y)) {\n                didUpdate = true;\n              }\n\n              break;\n\n            case \"[object Date]\":\n              if (x.getTime() !== y.getTime()) {\n                // TODO make this faster ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              }\n\n              break;\n\n            case \"[object Number]\":\n              if (!isNumberEqual(x, y)) {\n                // TODO is the copy necessary ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              }\n\n              break;\n\n            default:\n              // TODO is the copy necessary ?\n              obj[key] = copy(y);\n              didUpdate = true;\n              break;\n          } // TODO is this correct ?\n\n        } else {\n          // TODO make this faster ?\n          obj[key] = copy(y);\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  function updateObject(chart, oldObj, newObj) {\n    var didUpdate = false;\n\n    if (oldObj !== newObj) {\n      // TODO use Object.keys ?\n      for (var key in newObj) {\n        if (hasOwnKey(newObj, key)) {\n          // TODO make this faster ?\n          if (hasOwnKey(oldObj, key)) {\n            // TODO should this count as an update ?\n            if (key === \"listeners\") {\n              // TODO make this faster ?\n              removeChartListeners(chart, oldObj[key], newObj[key]);\n            }\n\n            if (update(chart, key, oldObj[key], newObj[key])) {\n              didUpdate = true;\n            }\n          } else {\n            // TODO make this faster ?\n            chart[key] = copy(newObj[key]);\n            didUpdate = true;\n          }\n        }\n      } // TODO use Object.keys ?\n\n\n      for (var key in oldObj) {\n        if (hasOwnKey(oldObj, key) && !hasOwnKey(newObj, key)) {\n          if (key === \"listeners\") {\n            removeChartListeners(chart, oldObj[key], []);\n          }\n\n          delete chart[key];\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  var id = 0;\n  AmCharts.React = createReactClass({\n    getInitialState: function getInitialState() {\n      return {\n        id: \"__AmCharts_React_\" + ++id + \"__\",\n        chart: null\n      };\n    },\n    componentDidMount: function componentDidMount() {\n      // AmCharts mutates the config object, so we have to make a deep copy to prevent that\n      var props = copy(this.props.options);\n      var chart = AmCharts.makeChart(this.state.id, props, this.props.delay);\n      this.setState({\n        chart: chart\n      });\n    },\n    // TODO is this correct ? should this use componentWillUpdate instead ?\n    componentDidUpdate: function componentDidUpdate(oldProps) {\n      if (this.state.chart) {\n        var didUpdate = updateObject(this.state.chart, oldProps.options, this.props.options); // TODO make this faster\n\n        if (didUpdate) {\n          this.state.chart.validateNow(true);\n        }\n      }\n    },\n    componentWillUnmount: function componentWillUnmount() {\n      if (this.state.chart) {\n        this.state.chart.clear();\n      }\n    },\n    render: function render() {\n      return React.createElement(\"div\", {\n        id: this.state.id,\n        className: this.props.className,\n        style: this.props.style\n      });\n    }\n  });\n})();","import React from 'react';\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst GroupedCountriesMap = () => {\n\n  const config = {\n    \"type\": \"map\",\n    \"theme\": \"none\",\n    \"dataProvider\": {\n      \"map\": \"worldHigh\",\n      \"zoomLevel\": 3.5,\n      \"zoomLongitude\": 10,\n      \"zoomLatitude\": 52,\n      \"areas\": [{\n        \"title\": \"Austria\",\n        \"id\": \"AT\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1995\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Ireland\",\n        \"id\": \"IE\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1973\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Denmark\",\n        \"id\": \"DK\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1973\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Finland\",\n        \"id\": \"FI\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1995\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Sweden\",\n        \"id\": \"SE\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1995\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Great Britain\",\n        \"id\": \"GB\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1973\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Italy\",\n        \"id\": \"IT\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1957\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"France\",\n        \"id\": \"FR\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1957\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Spain\",\n        \"id\": \"ES\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1986\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Greece\",\n        \"id\": \"GR\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1981\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Germany\",\n        \"id\": \"DE\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1957\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Belgium\",\n        \"id\": \"BE\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1957\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Luxembourg\",\n        \"id\": \"LU\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1957\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Netherlands\",\n        \"id\": \"NL\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1957\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Portugal\",\n        \"id\": \"PT\",\n        \"color\": \"#67b7dc\",\n        \"customData\": \"1986\",\n        \"groupId\": \"before2004\"\n      }, {\n        \"title\": \"Lithuania\",\n        \"id\": \"LT\",\n        \"color\": \"#ebdb8b\",\n        \"customData\": \"2004\",\n        \"groupId\": \"2004\"\n      }, {\n        \"title\": \"Latvia\",\n        \"id\": \"LV\",\n        \"color\": \"#ebdb8b\",\n        \"customData\": \"2004\",\n        \"groupId\": \"2004\"\n      }, {\n        \"title\": \"Czech Republic \",\n        \"id\": \"CZ\",\n        \"color\": \"#ebdb8b\",\n        \"customData\": \"2004\",\n        \"groupId\": \"2004\"\n      }, {\n        \"title\": \"Slovakia\",\n        \"id\": \"SK\",\n        \"color\": \"#ebdb8b\",\n        \"customData\": \"2004\",\n        \"groupId\": \"2004\"\n      }, {\n        \"title\": \"Slovenia\",\n        \"id\": \"SI\",\n        \"color\": \"#ebdb8b\",\n        \"customData\": \"2004\",\n        \"groupId\": \"2004\"\n      }, {\n        \"title\": \"Estonia\",\n        \"id\": \"EE\",\n        \"color\": \"#ebdb8b\",\n        \"customData\": \"2004\",\n        \"groupId\": \"2004\"\n      }, {\n        \"title\": \"Hungary\",\n        \"id\": \"HU\",\n        \"color\": \"#ebdb8b\",\n        \"customData\": \"2004\",\n        \"groupId\": \"2004\"\n      }, {\n        \"title\": \"Cyprus\",\n        \"id\": \"CY\",\n        \"color\": \"#ebdb8b\",\n        \"customData\": \"2004\",\n        \"groupId\": \"2004\"\n      }, {\n        \"title\": \"Malta\",\n        \"id\": \"MT\",\n        \"color\": \"#ebdb8b\",\n        \"customData\": \"2004\",\n        \"groupId\": \"2004\"\n      }, {\n        \"title\": \"Poland\",\n        \"id\": \"PL\",\n        \"color\": \"#ebdb8b\",\n        \"customData\": \"2004\",\n        \"groupId\": \"2004\"\n      }, {\n        \"title\": \"Romania\",\n        \"id\": \"RO\",\n        \"color\": \"#83c2ba\",\n        \"customData\": \"2007\",\n        \"groupId\": \"2007\"\n      }, {\n        \"title\": \"Bulgaria\",\n        \"id\": \"BG\",\n        \"color\": \"#83c2ba\",\n        \"customData\": \"2007\",\n        \"groupId\": \"2007\"\n      }, {\n        \"title\": \"Croatia\",\n        \"id\": \"HR\",\n        \"color\": \"#db8383\",\n        \"customData\": \"2013\",\n        \"groupId\": \"2013\"\n      }\n      ]\n    },\n\n    \"areasSettings\": {\n      \"rollOverOutlineColor\": \"#FFFFFF\",\n      \"rollOverColor\": \"#CC0000\",\n      \"alpha\": 0.8,\n      \"unlistedAreasAlpha\": 0.1,\n      \"balloonText\": \"[[title]] joined EU at [[customData]]\"\n    },\n\n\n    \"legend\": {\n      \"width\": \"100%\",\n      \"marginRight\": 27,\n      \"marginLeft\": 27,\n      \"equalWidths\": false,\n      \"backgroundAlpha\": 0.5,\n      \"backgroundColor\": \"#FFFFFF\",\n      \"borderColor\": \"#ffffff\",\n      \"borderAlpha\": 1,\n      \"top\": 450,\n      \"left\": 0,\n      \"horizontalGap\": 10,\n      \"data\": [{\n        \"title\": \"EU member before 2004\",\n        \"color\": \"#67b7dc\"\n      }, {\n        \"title\": \"Joined at 2004\",\n        \"color\": \"#ebdb8b\"\n      }, {\n        \"title\": \"Joined at 2007\",\n        \"color\": \"#83c2ba\"\n      }, {\n        \"title\": \"Joined at 2013\",\n        \"color\": \"#db8383\"\n      }]\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n\n  };\n\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default GroupedCountriesMap;\n","import React from \"react\";\nimport {Card} from \"antd\";\n\nimport GroupedCountriesMap from \"./Components/GroupedCountriesMap\";\nimport IntlMessages from \"util/IntlMessages\";\n\nconst GroupedCountries = () => {\n  return (\n    <Card className=\"gx-card\" title={<IntlMessages id=\"sidebar.map.grouped.countries\"/>}>\n      <GroupedCountriesMap/>\n    </Card>\n  );\n};\n\nexport default GroupedCountries;\n"],"sourceRoot":""}