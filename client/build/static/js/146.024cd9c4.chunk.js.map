{"version":3,"sources":["routes/components/packages/CreatePackage/PackageForm.js","routes/components/packages/CreatePackage/index.js"],"names":["FormItem","Form","Item","TextArea","Input","CreatePkg","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","message","success","console","log","firebase","ref","push","Name","Description","Price","Duration","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","concat","getFieldDecorator","this","formItemLayout","labelCol","xs","span","sm","wrapperCol","react_default","a","createElement","card","className","title","es_form","onSubmit","Object","assign","label","rules","required","whitespace","input","rows","offset","es_button","type","htmlType","Component","CreatePakg","create","connect","auth","authUser","CreatePackage","row","col","PackageForm"],"mappings":"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","file":"static/js/146.024cd9c4.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Button, Card, Form, Input, message} from \"antd\";\nimport * as firebase from 'firebase';\nimport {connect} from 'react-redux';\n\nconst FormItem = Form.Item;\n// const Option = Select.Option;\nconst { TextArea } = Input;\n\nclass CreatePkg extends Component {\n    \n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n  };\n\n  \n  handleSubmit = (e) => {\n\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        message.success('Package Succesfully Created!');\n        console.log('Received values of form: ', values);    \n            firebase.database().ref(\"packages\").push({\n              \"Name\"        : values.Name,\n              \"Description\" : values.Description,\n              \"Price\"       : values.Price,\n              \"Duration\"    : values.Duration,\n            });   \n      }\n    });\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({confirmDirty: this.state.confirmDirty || !!value});\n  }\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  }\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], {force: true});\n    }\n    callback();\n  }\n  handleWebsiteChange = (value) => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({autoCompleteResult});\n  }\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    // const {autoCompleteResult} = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 8},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n      },\n    };\n\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    return (\n      <Card className=\"gx-card\" title=\"Package Form\">\n        <Form onSubmit={this.handleSubmit}>\n          <FormItem\n            {...formItemLayout}\n            label={(\n              <span>\n              Name                    \n            </span>\n            )}          >\n            {getFieldDecorator('Name', {\n              rules: [{required: true, message: 'Please enter your Firstname!', whitespace: true}],\n            })(\n              <Input/>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label={(\n              <span>\n              Description                    \n            </span>\n            )}          >\n            {getFieldDecorator('Description', {\n              rules: [{required: true, message: 'Please enter your Description!', whitespace: true}],\n            })(\n            <TextArea rows={4} />\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label={(\n              <span>\n              Price                    \n            </span>\n            )}          >\n            {getFieldDecorator('Price', {\n              rules: [{required: true, message: 'Please enter your Price!', whitespace: true}],\n            })(\n              <Input/>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label={(\n              <span>\n              Duration                    \n            </span>\n            )}          >\n            {getFieldDecorator('Duration', {\n              rules: [{required: true, message: 'Please enter your Duration!', whitespace: true}],\n            })(\n              <Input/>\n            )}\n          </FormItem>\n\n          <FormItem {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">Create Package</Button>\n          </FormItem>\n        </Form>\n      </Card>\n    );\n  }\n\n}\n\nconst CreatePakg = Form.create()(CreatePkg);\nconst mapStateToProps = (state) => {\n    console.log(state.auth.authUser);    \n}\nexport default connect(mapStateToProps)(CreatePakg);\n","import React from \"react\";\nimport {Col, Row} from \"antd\";\nimport CreatePkg from './PackageForm';\n\n\nconst CreatePackage = () => {\n    return (\n      <Row>\n          {/* <h1>Welcome To Create Package Page</h1> */}\n        <Col span={24}>\n          <CreatePkg />\n        </Col>\n      \n      </Row>\n    );\n  };\n  \n  export default CreatePackage;"],"sourceRoot":""}