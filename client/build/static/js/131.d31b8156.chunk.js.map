{"version":3,"sources":["routes/components/dataEntry/Form/profile.js","routes/components/dataEntry/Form/index.js"],"names":["FormItem","Form","Item","Option","Select","Profile","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","console","log","firebase","onAuthStateChanged","user","uid","ref","child","update","Name","Firstname","Email","email","Phone","phone","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","concat","getFieldDecorator","this","formItemLayout","labelCol","xs","span","sm","wrapperCol","prefixSelector","initialValue","react_default","a","createElement","es_select","style","width","card","className","title","es_form","onSubmit","Object","assign","label","rules","required","message","whitespace","input","type","addonBefore","offset","es_button","htmlType","Component","ProfileForm","create","connect","auth","authUser","row","col","profile"],"mappings":"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","file":"static/js/131.d31b8156.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Button, Card, Form, Input, Select} from \"antd\";\nimport * as firebase from 'firebase';\nimport {connect} from 'react-redux';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass Profile extends Component {\n    \n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n  };\n\n  \n  handleSubmit = (e) => {\n\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n        firebase.auth().onAuthStateChanged(function(user){\n          if(user){\n            console.log(user.uid);\n            \n            firebase.database().ref(\"users\").child(user.uid).update({\n              \"Name\":values.Firstname,\n              \"Email\":values.email,\n              \"Phone\":values.phone\n            });\n            console.log(values);\n            \n\n          }\n        })      \n      }\n    });\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({confirmDirty: this.state.confirmDirty || !!value});\n  }\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  }\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], {force: true});\n    }\n    callback();\n  }\n  handleWebsiteChange = (value) => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({autoCompleteResult});\n  }\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 8},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n      },\n    };\n    \n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    \n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '91',\n    })(\n      <Select style={{width: 70}}>\n        <Option value=\"91\">+91</Option>\n        <Option value=\"00\">+00</Option>\n      </Select>\n    );\n\n    return (\n      <Card className=\"gx-card\" title=\"Profile Form\">\n        <Form onSubmit={this.handleSubmit}>\n          <FormItem\n            {...formItemLayout}\n            label={(\n              <span>\n              Name                    \n            </span>\n            )}          >\n            {getFieldDecorator('Firstname', {\n              rules: [{required: true, message: 'Please input your Firstname!', whitespace: true}],\n            })(\n              <Input/>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label={(\n              <span>\n              Email                    \n            </span>\n            )}          >\n            {getFieldDecorator('email', {\n              rules: [{required: true, type: 'email', message: 'The input is not valid E-mail!', whitespace: true}],\n            })(\n              <Input/>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label=\"Phone Number\"\n          >\n            {getFieldDecorator('phone', {\n              rules: [{required: true, message: 'Please input your phone number!'}],\n            })(\n              <Input addonBefore={prefixSelector} style={{width: '100%'}}/>\n            )}\n          </FormItem>\n          \n          <FormItem {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">update Profile</Button>\n          </FormItem>\n        </Form>\n      </Card>\n    );\n  }\n\n}\n\nconst ProfileForm = Form.create()(Profile);\nconst mapStateToProps = (state) => {\n    console.log(state.auth.authUser);    \n}\nexport default connect(mapStateToProps)(ProfileForm);\n","import React from \"react\";\nimport {Col, Row} from \"antd\";\n\n// import Basic from \"./Basic\";\n// import HorizontalLoginForm from \"./HorizontalLoginForm\";\n// import Registration from \"./Registration\";\nimport Profile from \"./profile\";\n// import AdvancedSearch from \"./AdvancedSearch\";\n// import DynamicFormItem from \"./DynamicFormItem\";\n// import TimeRelatedControls from \"./TimeRelatedControls\";\n// import CustomizedFormControls from \"./CustomizedFormControls\";\n// import StoreFormData from \"./StoreFormData\";\n// import CustomizedValidation from \"./CustomizedValidation\";\n// import CoordinatedControls from \"./CoordinatedControls\";\n// import FormLayout from \"./FormLayout\";\n// import DynamicRules from \"./DynamicRules\";\n// import OtherFormControls from \"./OtherFormControls\";\n\nconst Form = () => {\n\n  return (\n    <Row>\n      <Col span={24}>\n        <Profile/>\n      </Col>\n      {/* <Col span={24}>\n        <Basic/>\n      </Col>\n      <Col span={24}>\n        <HorizontalLoginForm/>\n      </Col>\n      <Col span={24}>\n        <Registration/>\n      </Col>\n      <Col span={24}>\n        <AdvancedSearch/>\n      </Col>\n      <Col span={24}>\n        <DynamicFormItem/>\n      </Col>\n      <Col span={24}>\n        <TimeRelatedControls/>\n      </Col>\n      <Col span={24}>\n        <CustomizedFormControls/>\n      </Col>\n      <Col span={24}>\n        <StoreFormData/>\n      </Col>\n      <Col span={24}>\n        <CustomizedValidation/>\n      </Col>\n      <Col span={24}>\n        <CoordinatedControls/>\n      </Col>\n      <Col span={24}>\n        <FormLayout/>\n      </Col>\n      <Col span={24}>\n        <DynamicRules/>\n      </Col>\n      <Col span={24}>\n        <OtherFormControls/>\n      </Col> */}\n    </Row>\n  );\n};\n\nexport default (Form);\n"],"sourceRoot":""}