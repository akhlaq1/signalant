{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","routes/components/billing/Invoices/ResetFilter.js","routes/components/billing/Invoices/index.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__","ResetFilter","state","filteredInfo","sortedInfo","data","handleChange","pagination","filters","sorter","console","log","_this","setState","clearFilters","clearAll","setAgeSort","order","columnKey","_this2","this","firebase","ref","on","snapshot","forEach","childSnapShot","locker","key","TraderId","val","PaymentId","paymentID","PackageId","pid","InvoiceId","tkey","info","push","prevState","concat","toConsumableArray","_this$state","columns","title","dataIndex","filteredValue","onFilter","value","record","includes","a","b","sortOrder","react_default","createElement","card","className","es_button","onClick","table","dataSource","onChange","React","Component","DataTable","row","col","span","Invoices_ResetFilter"],"mappings":"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","file":"static/js/76.97d326ee.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React from \"react\";\nimport {Card, Table, Button} from \"antd\";\nimport * as firebase from \"firebase\";\n\nclass ResetFilter extends React.Component{\n  state = {\n    filteredInfo: null,\n    sortedInfo: null,\n    data:[]\n  };\n\n  componentDidMount(){\n    let Ref = firebase.database().ref(\"invoices\");\n    Ref.on(\"value\", snapshot => {\n      const data = [];\n\n      snapshot.forEach(childSnapShot => { \n        const locker = {\n          key         : childSnapShot.key.toString(),\n          TraderId    : childSnapShot.val().TraderId,\n          PaymentId   : childSnapShot.val().paymentID,\n          PackageId   : childSnapShot.val().pid,\n          InvoiceId   : \"SIG1234\"\n        };\n        let tkey = locker.TraderId;\n        let ref = firebase.database().ref(\"users/\"+ tkey);\n            ref.on(\"value\", snapshot => {\n              let info = snapshot.val();\n              console.log(info);\n          })\n        \n        data.push(locker);\n\n      });\n\n      this.setState(prevState => {\n        return { data: [...prevState.data, ...data] };\n      });\n    });\n  }\n\n  handleChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n\n  clearFilters = () => {\n    this.setState({filteredInfo: null});\n  };\n\n  clearAll = () => {\n    this.setState({\n      filteredInfo: null,\n      sortedInfo: null,\n    });\n  };\n\n  setAgeSort = () => {\n    this.setState({\n      sortedInfo: {\n        order: 'descend',\n        columnKey: 'TraderId',\n      },\n    });\n  };\n\n  render(){\n    let {sortedInfo, filteredInfo} = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [{\n        title: 'Key ID',\n        dataIndex: 'key',\n        key: 'key',\n        filteredValue: filteredInfo.key || null,\n        onFilter: (value, record) => record.key.includes(value),\n        sorter: (a, b) => a.key.length - b.key.length,\n        sortOrder: sortedInfo.columnKey === 'key' && sortedInfo.order,\n      }, {\n        title: 'Trader ID',\n        dataIndex: 'TraderId',\n        key: 'TraderId',\n        sorter: (a, b) => a.TraderId - b.TraderId,\n        sortOrder: sortedInfo.columnKey === 'TraderId' && sortedInfo.order,\n      }, {\n        title: 'Package ID',\n        dataIndex: 'PackageId',\n        key: 'PackageId',\n        filteredValue: filteredInfo.PackageId || null,\n        onFilter: (value, record) => record.PackageId.includes(value),\n        sorter: (a, b) => a.PackageId.length - b.PackageId.length,\n        sortOrder: sortedInfo.columnKey === 'PackageId' && sortedInfo.order,\n      }, {\n        title: 'Invoice ID',\n        dataIndex: 'InvoiceId',\n        key: 'InvoiceId',\n        sorter: (a, b) => a.InvoiceId - b.InvoiceId,\n        sortOrder: sortedInfo.columnKey === 'InvoiceId' && sortedInfo.order,\n      }\n    ];\n\n    console.log(this.state.data);\n    \n    return(\n      <Card title=\"Billing\">\n        <div className=\"table-operations\">\n          <Button onClick={this.setAgeSort}>Sort TraderId</Button>\n          <Button onClick={this.clearFilters}>Clear filters</Button>\n          <Button onClick={this.clearAll}>Clear filters and sorters</Button>\n        </div>\n        <Table className=\"gx-table-responsive\" columns={columns} dataSource={this.state.data} onChange={this.handleChange}/>\n      </Card>\n    )\n  }\n}\n\nexport default ResetFilter;","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\nimport ResetFilter from \"./ResetFilter\";\r\n\r\nconst DataTable = () => {\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <ResetFilter/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"sourceRoot":""}