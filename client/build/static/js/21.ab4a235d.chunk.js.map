{"version":3,"sources":["../node_modules/@amcharts/amcharts3-react/index.js","components/ContainerHeader/index.js","../node_modules/@amcharts/amcharts3-react/amcharts3-react.js","routes/extensions/charts/recharts/bar/Components/data.js","routes/extensions/charts/recharts/bar/Components/StackedBarChart.js","routes/extensions/charts/amchart/bar/Components/ColumnWithRotatedSeries.js","routes/extensions/charts/amchart/bar/Components/SimpleColumnChart.js","routes/extensions/charts/amchart/bar/Components/ColumnAndLineMix.js","routes/extensions/charts/amchart/bar/Components/Cylinder3DChart.js","routes/extensions/charts/amchart/bar/Components/Column3DChart.js","routes/extensions/charts/amchart/bar/Components/LayeredColumnChart.js","routes/extensions/charts/amchart/bar/Components/StackedbarChartWithNegativeValues.js","routes/extensions/charts/amchart/bar/Components/StackedColumnChart.js","routes/extensions/charts/amchart/bar/Components/ColumnChartWithImagesOnTop.js","routes/extensions/charts/amchart/bar/Components/ClusteredBarChart.js","routes/extensions/charts/amchart/bar/Components/Bar3DChart.js","routes/extensions/charts/amchart/bar/Components/BarAndLineChartMix.js","routes/extensions/charts/amchart/bar/Components/FloatingBarChart.js","routes/extensions/charts/amchart/bar/Components/Stacked3DColumnChart.js","routes/extensions/charts/amchart/bar/index.js"],"names":["window","React","__webpack_require__","ReactDOM","createReactClass","module","exports","AmCharts","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContainerHeader","_ref","title","match","a","createElement","className","getType","x","toString","call","hasOwnKey","obj","key","hasOwnProperty","copy","length","output","Array","i","copyArray","copyObject","Date","getTime","isNaN","removeChartListeners","chart","y","xLength","yLength","xValue","has","j","yValue","event","method","removeListener","update","didUpdate","xType","updateArray","updateObject","isNumberEqual","oldObj","newObj","id","getInitialState","componentDidMount","props","this","options","makeChart","state","delay","setState","componentDidUpdate","oldProps","validateNow","componentWillUnmount","clear","render","style","data","name","uv","price","amt","recharts__WEBPACK_IMPORTED_MODULE_1__","_data__WEBPACK_IMPORTED_MODULE_2__","StackedBarChart","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","stackId","fill","ColumnWithRotatedSeries","react_default","amcharts3_react_default","type","theme","marginRight","dataProvider","country","visits","color","valueAxes","axisAlpha","position","startDuration","graphs","balloonText","fillColorsField","fillAlphas","lineAlpha","valueField","chartCursor","categoryBalloonEnabled","cursorAlpha","zoomable","categoryField","categoryAxis","gridPosition","labelRotation","export","enabled","SimpleColumnChart","gridColor","gridAlpha","dashLength","gridAboveGraphs","tickPosition","tickLength","ColumnChartWithImagesOnTop","addClassNames","autoMargins","marginLeft","marginTop","marginBottom","balloon","adjustBorderColor","horizontalPadding","verticalPadding","year","income","expenses","dashLengthLine","dashLengthColumn","alpha","additional","alphaField","dashLengthField","bullet","lineThickness","bulletSize","bulletBorderAlpha","bulletColor","useLineColorForBulletBorder","bulletBorderThickness","Cylinder3DChart","colorField","topRadius","depth3D","angle","Column3DChart","LayeredColumnChart","year2004","year2005","unit","clustered","columnWidth","plotAreaFillAlphas","StackedbarChartWithNegativeValues","config","rotate","age","male","female","labelText","labelFunction","item","Math","abs","values","value","balloonFunction","category","ignoreAxisWidth","guides","fixedPosition","valueBalloonsEnabled","fullWidth","allLabels","text","bold","align","StackedColumnChart","legend","horizontalGap","maxColumns","useGraphSettings","markerSize","europe","namerica","asia","lamerica","meast","africa","stackType","points","maximum","minimum","bulletOffset","cornerRadiusTop","customBulletField","inside","trendLines","titles","Bar3DChart","fillAlpha","BarAndLineChartMix","handDrawn","handDrawScatter","valueWidth","verticalGap","minorGridAlpha","minorGridEnabled","FloatingBarChart","BarChart","IntlMessages","row","col","lg","md","sm","xs","card","Components_ColumnWithRotatedSeries","Components_SimpleColumnChart","ColumnAndLineMix","Components_StackedbarChartWithNegativeValues","Components_Column3DChart","Components_Cylinder3DChart","Components_LayeredColumnChart","Stacked3DColumnChart","Components_FloatingBarChart","Components_BarAndLineChartMix","Components_Bar3DChart","ClusteredBarChart","Components_ColumnChartWithImagesOnTop","Components_StackedColumnChart"],"mappings":"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","file":"static/js/21.ab4a235d.chunk.js","sourcesContent":["if (typeof window !== \"undefined\") {\n  window.React = require(\"react\");\n  window.ReactDOM = require(\"react-dom\");\n  window.createReactClass = require(\"create-react-class\");\n\n  require(\"./amcharts3-react.js\");\n\n  module.exports = window.AmCharts;\n} else {\n  module.exports = {};\n}","import React from \"react\";\n\nconst ContainerHeader = ({title, match}) => {\n  return (\n    <div className=\"gx-page-heading\">\n      <h2 className=\"gx-page-title\">{title}</h2>\n    </div>\n  )\n};\n\nexport default ContainerHeader;\n\n","(function () {\n  function getType(x) {\n    // TODO make this faster ?\n    return {}.toString.call(x);\n  }\n\n  function hasOwnKey(obj, key) {\n    return {}.hasOwnProperty.call(obj, key);\n  }\n\n  function copyObject(x) {\n    var output = {}; // TODO use Object.keys ?\n\n    for (var key in x) {\n      if (hasOwnKey(x, key)) {\n        output[key] = copy(x[key]);\n      }\n    }\n\n    return output;\n  }\n\n  function copyArray(x) {\n    var length = x.length;\n    var output = new Array(length);\n\n    for (var i = 0; i < length; ++i) {\n      output[i] = copy(x[i]);\n    }\n\n    return output;\n  } // TODO can this be made faster ?\n  // TODO what about regexps, etc. ?\n\n\n  function copy(x) {\n    switch (getType(x)) {\n      case \"[object Array]\":\n        return copyArray(x);\n\n      case \"[object Object]\":\n        return copyObject(x);\n      // TODO is this necessary ?\n\n      case \"[object Date]\":\n        return new Date(x.getTime());\n\n      default:\n        return x;\n    }\n  }\n\n  function isNaN(x) {\n    return x !== x;\n  }\n\n  function isNumberEqual(x, y) {\n    return x === y || isNaN(x) && isNaN(y);\n  }\n\n  function removeChartListeners(chart, x, y) {\n    if (x !== y) {\n      // TODO is this necessary ?\n      if (x == null) {\n        x = [];\n      } // TODO is this necessary ?\n\n\n      if (y == null) {\n        y = [];\n      }\n\n      var xLength = x.length;\n      var yLength = y.length;\n\n      for (var i = 0; i < xLength; ++i) {\n        var xValue = x[i];\n        var has = false; // TODO make this faster ?\n\n        for (var j = 0; j < yLength; ++j) {\n          var yValue = y[j]; // TODO is this correct ?\n\n          if (xValue.event === yValue.event && xValue.method === yValue.method) {\n            has = true;\n            break;\n          }\n        }\n\n        if (!has) {\n          // TODO is this correct ?\n          chart.removeListener(chart, xValue.event, xValue.method);\n        }\n      }\n    }\n  }\n\n  function updateArray(a, x, y) {\n    var didUpdate = false;\n\n    if (x !== y) {\n      var xLength = x.length;\n      var yLength = y.length;\n\n      if (xLength !== yLength) {\n        a.length = yLength;\n        didUpdate = true;\n      }\n\n      for (var i = 0; i < yLength; ++i) {\n        if (i < xLength) {\n          if (update(a, i, x[i], y[i])) {\n            didUpdate = true;\n          }\n        } else {\n          // TODO make this faster ?\n          a[i] = copy(y[i]); // TODO is this necessary ?\n\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  function update(obj, key, x, y) {\n    var didUpdate = false;\n\n    if (x !== y) {\n      // https://github.com/amcharts/amcharts3-react/issues/40\n      if (hasOwnKey(obj, key)) {\n        var xType = getType(x);\n        var yType = getType(y);\n\n        if (xType === yType) {\n          switch (xType) {\n            case \"[object Array]\":\n              // TODO hacky, remove this after the following bug is fixed:\n              //      Zendesk #28040\n              //      https://codepen.io/team/amcharts/pen/0d61f559cda74682c0ca55d9a24a0f77\n              //      https://www.amcharts.com/kbase/forcing-grouping-stock-chart-data-specific-periods/\n              if (key === \"groupToPeriods\") {\n                // TODO is the copy necessary ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              } else {\n                if (updateArray(obj[key], x, y)) {\n                  didUpdate = true;\n                }\n              }\n\n              break;\n\n            case \"[object Object]\":\n              if (updateObject(obj[key], x, y)) {\n                didUpdate = true;\n              }\n\n              break;\n\n            case \"[object Date]\":\n              if (x.getTime() !== y.getTime()) {\n                // TODO make this faster ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              }\n\n              break;\n\n            case \"[object Number]\":\n              if (!isNumberEqual(x, y)) {\n                // TODO is the copy necessary ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              }\n\n              break;\n\n            default:\n              // TODO is the copy necessary ?\n              obj[key] = copy(y);\n              didUpdate = true;\n              break;\n          } // TODO is this correct ?\n\n        } else {\n          // TODO make this faster ?\n          obj[key] = copy(y);\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  function updateObject(chart, oldObj, newObj) {\n    var didUpdate = false;\n\n    if (oldObj !== newObj) {\n      // TODO use Object.keys ?\n      for (var key in newObj) {\n        if (hasOwnKey(newObj, key)) {\n          // TODO make this faster ?\n          if (hasOwnKey(oldObj, key)) {\n            // TODO should this count as an update ?\n            if (key === \"listeners\") {\n              // TODO make this faster ?\n              removeChartListeners(chart, oldObj[key], newObj[key]);\n            }\n\n            if (update(chart, key, oldObj[key], newObj[key])) {\n              didUpdate = true;\n            }\n          } else {\n            // TODO make this faster ?\n            chart[key] = copy(newObj[key]);\n            didUpdate = true;\n          }\n        }\n      } // TODO use Object.keys ?\n\n\n      for (var key in oldObj) {\n        if (hasOwnKey(oldObj, key) && !hasOwnKey(newObj, key)) {\n          if (key === \"listeners\") {\n            removeChartListeners(chart, oldObj[key], []);\n          }\n\n          delete chart[key];\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  var id = 0;\n  AmCharts.React = createReactClass({\n    getInitialState: function getInitialState() {\n      return {\n        id: \"__AmCharts_React_\" + ++id + \"__\",\n        chart: null\n      };\n    },\n    componentDidMount: function componentDidMount() {\n      // AmCharts mutates the config object, so we have to make a deep copy to prevent that\n      var props = copy(this.props.options);\n      var chart = AmCharts.makeChart(this.state.id, props, this.props.delay);\n      this.setState({\n        chart: chart\n      });\n    },\n    // TODO is this correct ? should this use componentWillUpdate instead ?\n    componentDidUpdate: function componentDidUpdate(oldProps) {\n      if (this.state.chart) {\n        var didUpdate = updateObject(this.state.chart, oldProps.options, this.props.options); // TODO make this faster\n\n        if (didUpdate) {\n          this.state.chart.validateNow(true);\n        }\n      }\n    },\n    componentWillUnmount: function componentWillUnmount() {\n      if (this.state.chart) {\n        this.state.chart.clear();\n      }\n    },\n    render: function render() {\n      return React.createElement(\"div\", {\n        id: this.state.id,\n        className: this.props.className,\n        style: this.props.style\n      });\n    }\n  });\n})();","const data = [\n  {name: 'Page A', uv: 4000, price: 2400, amt: 2400},\n  {name: 'Page B', uv: 3000, price: 1398, amt: 2210},\n  {name: 'Page C', uv: 2000, price: 9800, amt: 2290},\n  {name: 'Page D', uv: 2780, price: 3908, amt: 2000},\n  {name: 'Page E', uv: 1890, price: 4800, amt: 2181},\n  {name: 'Page F', uv: 2390, price: 3800, amt: 2500},\n  {name: 'Page G', uv: 3490, price: 4300, amt: 2100},\n];\nexport default data;\n","import React from \"react\";\nimport {Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\n\nimport data from \"./data\";\n\nconst StackedBarChart = () => (\n\n  <ResponsiveContainer width=\"100%\" height={200}>\n    <BarChart data={data}\n              margin={{top: 10, right: 0, left: -15, bottom: 0}}>\n      <XAxis dataKey=\"name\"/>\n      <YAxis/>\n      <CartesianGrid strokeDasharray=\"3 3\"/>\n      <Tooltip/>\n      <Legend/>\n      <Bar dataKey=\"price\" stackId=\"a\" fill=\"#003366\"/>\n      <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#FE9E15\"/>\n    </BarChart>\n  </ResponsiveContainer>\n);\n\nexport default StackedBarChart;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst ColumnWithRotatedSeries = () => {\n\n  const config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"marginRight\": 70,\n    \"dataProvider\": [{\n      \"country\": \"USA\",\n      \"visits\": 3025,\n      \"color\": \"#FF0F00\"\n    }, {\n      \"country\": \"China\",\n      \"visits\": 1882,\n      \"color\": \"#FF6600\"\n    }, {\n      \"country\": \"Japan\",\n      \"visits\": 1809,\n      \"color\": \"#FF9E01\"\n    }, {\n      \"country\": \"Germany\",\n      \"visits\": 1322,\n      \"color\": \"#FCD202\"\n    }, {\n      \"country\": \"UK\",\n      \"visits\": 1122,\n      \"color\": \"#F8FF01\"\n    }, {\n      \"country\": \"France\",\n      \"visits\": 1114,\n      \"color\": \"#B0DE09\"\n    }, {\n      \"country\": \"India\",\n      \"visits\": 984,\n      \"color\": \"#04D215\"\n    }, {\n      \"country\": \"Spain\",\n      \"visits\": 711,\n      \"color\": \"#0D8ECF\"\n    }, {\n      \"country\": \"Netherlands\",\n      \"visits\": 665,\n      \"color\": \"#0D52D1\"\n    }, {\n      \"country\": \"Russia\",\n      \"visits\": 580,\n      \"color\": \"#2A0CD0\"\n    }, {\n      \"country\": \"South Korea\",\n      \"visits\": 443,\n      \"color\": \"#8A0CCF\"\n    }, {\n      \"country\": \"Canada\",\n      \"visits\": 441,\n      \"color\": \"#CD0D74\"\n    }],\n    \"valueAxes\": [{\n      \"axisAlpha\": 0,\n      \"position\": \"left\",\n      \"title\": \"Visitors from country\"\n    }],\n    \"startDuration\": 1,\n    \"graphs\": [{\n      \"balloonText\": \"<b>[[category]]: [[value]]</b>\",\n      \"fillColorsField\": \"color\",\n      \"fillAlphas\": 0.9,\n      \"lineAlpha\": 0.2,\n      \"type\": \"column\",\n      \"valueField\": \"visits\"\n    }],\n    \"chartCursor\": {\n      \"categoryBalloonEnabled\": false,\n      \"cursorAlpha\": 0,\n      \"zoomable\": false\n    },\n    \"categoryField\": \"country\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\",\n      \"labelRotation\": 45\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default ColumnWithRotatedSeries;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst SimpleColumnChart = () => {\n\n  const config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"dataProvider\": [{\n      \"country\": \"USA\",\n      \"visits\": 2025\n    }, {\n      \"country\": \"China\",\n      \"visits\": 1882\n    }, {\n      \"country\": \"Japan\",\n      \"visits\": 1809\n    }, {\n      \"country\": \"Germany\",\n      \"visits\": 1322\n    }, {\n      \"country\": \"UK\",\n      \"visits\": 1122\n    }, {\n      \"country\": \"France\",\n      \"visits\": 1114\n    }, {\n      \"country\": \"India\",\n      \"visits\": 984\n    }, {\n      \"country\": \"Spain\",\n      \"visits\": 711\n    }, {\n      \"country\": \"Netherlands\",\n      \"visits\": 665\n    }, {\n      \"country\": \"Russia\",\n      \"visits\": 580\n    }, {\n      \"country\": \"South Korea\",\n      \"visits\": 443\n    }, {\n      \"country\": \"Canada\",\n      \"visits\": 441\n    }, {\n      \"country\": \"Brazil\",\n      \"visits\": 395\n    }],\n    \"valueAxes\": [{\n      \"gridColor\": \"#FFFFFF\",\n      \"gridAlpha\": 0.2,\n      \"dashLength\": 0\n    }],\n    \"gridAboveGraphs\": true,\n    \"startDuration\": 1,\n    \"graphs\": [{\n      \"balloonText\": \"[[category]]: <b>[[value]]</b>\",\n      \"fillAlphas\": 0.8,\n      \"lineAlpha\": 0.2,\n      \"type\": \"column\",\n      \"valueField\": \"visits\"\n    }],\n    \"chartCursor\": {\n      \"categoryBalloonEnabled\": false,\n      \"cursorAlpha\": 0,\n      \"zoomable\": false\n    },\n    \"categoryField\": \"country\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\",\n      \"gridAlpha\": 0,\n      \"tickPosition\": \"start\",\n      \"tickLength\": 20\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default SimpleColumnChart;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst ColumnChartWithImagesOnTop = () => {\n\n  const config = {\n    \"type\": \"serial\",\n    \"addClassNames\": true,\n    \"theme\": \"light\",\n    \"autoMargins\": false,\n    \"marginLeft\": 30,\n    \"marginRight\": 8,\n    \"marginTop\": 10,\n    \"marginBottom\": 26,\n    \"balloon\": {\n      \"adjustBorderColor\": false,\n      \"horizontalPadding\": 10,\n      \"verticalPadding\": 8,\n      \"color\": \"#ffffff\"\n    },\n\n    \"dataProvider\": [{\n      \"year\": 2009,\n      \"income\": 23.5,\n      \"expenses\": 21.1\n    }, {\n      \"year\": 2010,\n      \"income\": 26.2,\n      \"expenses\": 30.5\n    }, {\n      \"year\": 2011,\n      \"income\": 30.1,\n      \"expenses\": 34.9\n    }, {\n      \"year\": 2012,\n      \"income\": 29.5,\n      \"expenses\": 31.1\n    }, {\n      \"year\": 2013,\n      \"income\": 30.6,\n      \"expenses\": 28.2,\n      \"dashLengthLine\": 5\n    }, {\n      \"year\": 2014,\n      \"income\": 34.1,\n      \"expenses\": 32.9,\n      \"dashLengthColumn\": 5,\n      \"alpha\": 0.2,\n      \"additional\": \"(projection)\"\n    }],\n    \"valueAxes\": [{\n      \"axisAlpha\": 0,\n      \"position\": \"left\"\n    }],\n    \"startDuration\": 1,\n    \"graphs\": [{\n      \"alphaField\": \"alpha\",\n      \"balloonText\": \"<span style='font-size:12px;'>[[title]] in [[category]]:<br><span style='font-size:20px;'>[[value]]</span> [[additional]]</span>\",\n      \"fillAlphas\": 1,\n      \"title\": \"Income\",\n      \"type\": \"column\",\n      \"valueField\": \"income\",\n      \"dashLengthField\": \"dashLengthColumn\"\n    }, {\n      \"id\": \"graph2\",\n      \"balloonText\": \"<span style='font-size:12px;'>[[title]] in [[category]]:<br><span style='font-size:20px;'>[[value]]</span> [[additional]]</span>\",\n      \"bullet\": \"round\",\n      \"lineThickness\": 3,\n      \"bulletSize\": 7,\n      \"bulletBorderAlpha\": 1,\n      \"bulletColor\": \"#FFFFFF\",\n      \"useLineColorForBulletBorder\": true,\n      \"bulletBorderThickness\": 3,\n      \"fillAlphas\": 0,\n      \"lineAlpha\": 1,\n      \"title\": \"Expenses\",\n      \"valueField\": \"expenses\",\n      \"dashLengthField\": \"dashLengthLine\"\n    }],\n    \"categoryField\": \"year\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\",\n      \"axisAlpha\": 0,\n      \"tickLength\": 0\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default ColumnChartWithImagesOnTop;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst Cylinder3DChart = () => {\n\n  const config = {\n    \"theme\": \"light\",\n    \"type\": \"serial\",\n    \"startDuration\": 2,\n    \"dataProvider\": [{\n      \"country\": \"USA\",\n      \"visits\": 4025,\n      \"color\": \"#FF0F00\"\n    }, {\n      \"country\": \"China\",\n      \"visits\": 1882,\n      \"color\": \"#FF6600\"\n    }, {\n      \"country\": \"Japan\",\n      \"visits\": 1809,\n      \"color\": \"#FF9E01\"\n    }, {\n      \"country\": \"Germany\",\n      \"visits\": 1322,\n      \"color\": \"#FCD202\"\n    }, {\n      \"country\": \"UK\",\n      \"visits\": 1122,\n      \"color\": \"#F8FF01\"\n    }, {\n      \"country\": \"France\",\n      \"visits\": 1114,\n      \"color\": \"#B0DE09\"\n    }, {\n      \"country\": \"India\",\n      \"visits\": 984,\n      \"color\": \"#04D215\"\n    }, {\n      \"country\": \"Spain\",\n      \"visits\": 711,\n      \"color\": \"#0D8ECF\"\n    }, {\n      \"country\": \"Netherlands\",\n      \"visits\": 665,\n      \"color\": \"#0D52D1\"\n    }, {\n      \"country\": \"Russia\",\n      \"visits\": 580,\n      \"color\": \"#2A0CD0\"\n    }, {\n      \"country\": \"South Korea\",\n      \"visits\": 443,\n      \"color\": \"#8A0CCF\"\n    }, {\n      \"country\": \"Canada\",\n      \"visits\": 441,\n      \"color\": \"#CD0D74\"\n    }, {\n      \"country\": \"Brazil\",\n      \"visits\": 395,\n      \"color\": \"#754DEB\"\n    }, {\n      \"country\": \"Italy\",\n      \"visits\": 386,\n      \"color\": \"#DDDDDD\"\n    }, {\n      \"country\": \"Taiwan\",\n      \"visits\": 338,\n      \"color\": \"#333333\"\n    }],\n    \"valueAxes\": [{\n      \"position\": \"left\",\n      \"axisAlpha\": 0,\n      \"gridAlpha\": 0\n    }],\n    \"graphs\": [{\n      \"balloonText\": \"[[category]]: <b>[[value]]</b>\",\n      \"colorField\": \"color\",\n      \"fillAlphas\": 0.85,\n      \"lineAlpha\": 0.1,\n      \"type\": \"column\",\n      \"topRadius\": 1,\n      \"valueField\": \"visits\"\n    }],\n    \"depth3D\": 40,\n    \"angle\": 30,\n    \"chartCursor\": {\n      \"categoryBalloonEnabled\": false,\n      \"cursorAlpha\": 0,\n      \"zoomable\": false\n    },\n    \"categoryField\": \"country\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\",\n      \"axisAlpha\": 0,\n      \"gridAlpha\": 0\n\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default Cylinder3DChart;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst Column3DChart = () => {\n\n  const config = {\n    \"theme\": \"light\",\n    \"type\": \"serial\",\n    \"startDuration\": 2,\n    \"dataProvider\": [{\n      \"country\": \"USA\",\n      \"visits\": 4025,\n      \"color\": \"#FF0F00\"\n    }, {\n      \"country\": \"China\",\n      \"visits\": 1882,\n      \"color\": \"#FF6600\"\n    }, {\n      \"country\": \"Japan\",\n      \"visits\": 1809,\n      \"color\": \"#FF9E01\"\n    }, {\n      \"country\": \"Germany\",\n      \"visits\": 1322,\n      \"color\": \"#FCD202\"\n    }, {\n      \"country\": \"UK\",\n      \"visits\": 1122,\n      \"color\": \"#F8FF01\"\n    }, {\n      \"country\": \"France\",\n      \"visits\": 1114,\n      \"color\": \"#B0DE09\"\n    }, {\n      \"country\": \"India\",\n      \"visits\": 984,\n      \"color\": \"#04D215\"\n    }, {\n      \"country\": \"Spain\",\n      \"visits\": 711,\n      \"color\": \"#0D8ECF\"\n    }, {\n      \"country\": \"Netherlands\",\n      \"visits\": 665,\n      \"color\": \"#0D52D1\"\n    }, {\n      \"country\": \"Russia\",\n      \"visits\": 580,\n      \"color\": \"#2A0CD0\"\n    }, {\n      \"country\": \"South Korea\",\n      \"visits\": 443,\n      \"color\": \"#8A0CCF\"\n    }, {\n      \"country\": \"Canada\",\n      \"visits\": 441,\n      \"color\": \"#CD0D74\"\n    }, {\n      \"country\": \"Brazil\",\n      \"visits\": 395,\n      \"color\": \"#754DEB\"\n    }, {\n      \"country\": \"Italy\",\n      \"visits\": 386,\n      \"color\": \"#DDDDDD\"\n    }, {\n      \"country\": \"Australia\",\n      \"visits\": 384,\n      \"color\": \"#999999\"\n    }, {\n      \"country\": \"Taiwan\",\n      \"visits\": 338,\n      \"color\": \"#333333\"\n    }, {\n      \"country\": \"Poland\",\n      \"visits\": 328,\n      \"color\": \"#000000\"\n    }],\n    \"valueAxes\": [{\n      \"position\": \"left\",\n      \"title\": \"Visitors\"\n    }],\n    \"graphs\": [{\n      \"balloonText\": \"[[category]]: <b>[[value]]</b>\",\n      \"fillColorsField\": \"color\",\n      \"fillAlphas\": 1,\n      \"lineAlpha\": 0.1,\n      \"type\": \"column\",\n      \"valueField\": \"visits\"\n    }],\n    \"depth3D\": 20,\n    \"angle\": 30,\n    \"chartCursor\": {\n      \"categoryBalloonEnabled\": false,\n      \"cursorAlpha\": 0,\n      \"zoomable\": false\n    },\n    \"categoryField\": \"country\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\",\n      \"labelRotation\": 90\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default Column3DChart;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst LayeredColumnChart = () => {\n\n  const config = {\n    \"theme\": \"light\",\n    \"type\": \"serial\",\n    \"dataProvider\": [{\n      \"country\": \"USA\",\n      \"year2004\": 3.5,\n      \"year2005\": 4.2\n    }, {\n      \"country\": \"UK\",\n      \"year2004\": 1.7,\n      \"year2005\": 3.1\n    }, {\n      \"country\": \"Canada\",\n      \"year2004\": 2.8,\n      \"year2005\": 2.9\n    }, {\n      \"country\": \"Japan\",\n      \"year2004\": 2.6,\n      \"year2005\": 2.3\n    }, {\n      \"country\": \"France\",\n      \"year2004\": 1.4,\n      \"year2005\": 2.1\n    }, {\n      \"country\": \"Brazil\",\n      \"year2004\": 2.6,\n      \"year2005\": 4.9\n    }],\n    \"valueAxes\": [{\n      \"unit\": \"%\",\n      \"position\": \"left\",\n      \"title\": \"GDP growth rate\",\n    }],\n    \"startDuration\": 1,\n    \"graphs\": [{\n      \"balloonText\": \"GDP grow in [[category]] (2004): <b>[[value]]</b>\",\n      \"fillAlphas\": 0.9,\n      \"lineAlpha\": 0.2,\n      \"title\": \"2004\",\n      \"type\": \"column\",\n      \"valueField\": \"year2004\"\n    }, {\n      \"balloonText\": \"GDP grow in [[category]] (2005): <b>[[value]]</b>\",\n      \"fillAlphas\": 0.9,\n      \"lineAlpha\": 0.2,\n      \"title\": \"2005\",\n      \"type\": \"column\",\n      \"clustered\": false,\n      \"columnWidth\": 0.5,\n      \"valueField\": \"year2005\"\n    }],\n    \"plotAreaFillAlphas\": 0.1,\n    \"categoryField\": \"country\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\"\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default LayeredColumnChart;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst StackedbarChartWithNegativeValues = () => {\n\n  const config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"rotate\": true,\n    \"marginBottom\": 50,\n    \"dataProvider\": [{\n      \"age\": \"85+\",\n      \"male\": -0.1,\n      \"female\": 0.3\n    }, {\n      \"age\": \"80-54\",\n      \"male\": -0.2,\n      \"female\": 0.3\n    }, {\n      \"age\": \"75-79\",\n      \"male\": -0.3,\n      \"female\": 0.6\n    }, {\n      \"age\": \"70-74\",\n      \"male\": -0.5,\n      \"female\": 0.8\n    }, {\n      \"age\": \"65-69\",\n      \"male\": -0.8,\n      \"female\": 1.0\n    }, {\n      \"age\": \"60-64\",\n      \"male\": -1.1,\n      \"female\": 1.3\n    }, {\n      \"age\": \"55-59\",\n      \"male\": -1.7,\n      \"female\": 1.9\n    }, {\n      \"age\": \"50-54\",\n      \"male\": -2.2,\n      \"female\": 2.5\n    }, {\n      \"age\": \"45-49\",\n      \"male\": -2.8,\n      \"female\": 3.0\n    }, {\n      \"age\": \"40-44\",\n      \"male\": -3.4,\n      \"female\": 3.6\n    }, {\n      \"age\": \"35-39\",\n      \"male\": -4.2,\n      \"female\": 4.1\n    }, {\n      \"age\": \"30-34\",\n      \"male\": -5.2,\n      \"female\": 4.8\n    }, {\n      \"age\": \"25-29\",\n      \"male\": -5.6,\n      \"female\": 5.1\n    }, {\n      \"age\": \"20-24\",\n      \"male\": -5.1,\n      \"female\": 5.1\n    }, {\n      \"age\": \"15-19\",\n      \"male\": -3.8,\n      \"female\": 3.8\n    }, {\n      \"age\": \"10-14\",\n      \"male\": -3.2,\n      \"female\": 3.4\n    }, {\n      \"age\": \"5-9\",\n      \"male\": -4.4,\n      \"female\": 4.1\n    }, {\n      \"age\": \"0-4\",\n      \"male\": -5.0,\n      \"female\": 4.8\n    }],\n    \"startDuration\": 1,\n    \"graphs\": [{\n      \"fillAlphas\": 0.8,\n      \"lineAlpha\": 0.2,\n      \"type\": \"column\",\n      \"valueField\": \"male\",\n      \"title\": \"Male\",\n      \"labelText\": \"[[value]]\",\n      \"clustered\": false,\n      \"labelFunction\": function (item) {\n        return Math.abs(item.values.value);\n      },\n      \"balloonFunction\": function (item) {\n        return item.category + \": \" + Math.abs(item.values.value) + \"%\";\n      }\n    }, {\n      \"fillAlphas\": 0.8,\n      \"lineAlpha\": 0.2,\n      \"type\": \"column\",\n      \"valueField\": \"female\",\n      \"title\": \"Female\",\n      \"labelText\": \"[[value]]\",\n      \"clustered\": false,\n      \"labelFunction\": function (item) {\n        return Math.abs(item.values.value);\n      },\n      \"balloonFunction\": function (item) {\n        return item.category + \": \" + Math.abs(item.values.value) + \"%\";\n      }\n    }],\n    \"categoryField\": \"age\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\",\n      \"gridAlpha\": 0.2,\n      \"axisAlpha\": 0\n    },\n    \"valueAxes\": [{\n      \"gridAlpha\": 0,\n      \"ignoreAxisWidth\": true,\n      \"labelFunction\": function (value) {\n        return Math.abs(value) + '%';\n      },\n      \"guides\": [{\n        \"value\": 0,\n        \"lineAlpha\": 0.2\n      }]\n    }],\n    \"balloon\": {\n      \"fixedPosition\": true\n    },\n    \"chartCursor\": {\n      \"valueBalloonsEnabled\": false,\n      \"cursorAlpha\": 0.05,\n      \"fullWidth\": true\n    },\n    \"allLabels\": [{\n      \"text\": \"Male\",\n      \"x\": \"28%\",\n      \"y\": \"97%\",\n      \"bold\": true,\n      \"align\": \"middle\"\n    }, {\n      \"text\": \"Female\",\n      \"x\": \"75%\",\n      \"y\": \"97%\",\n      \"bold\": true,\n      \"align\": \"middle\"\n    }],\n    \"export\": {\n      \"enabled\": true\n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default StackedbarChartWithNegativeValues;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst StackedColumnChart = () => {\n\n  const config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"legend\": {\n      \"horizontalGap\": 10,\n      \"maxColumns\": 1,\n      \"position\": \"right\",\n      \"useGraphSettings\": true,\n      \"markerSize\": 10\n    },\n    \"dataProvider\": [{\n      \"year\": 2003,\n      \"europe\": 2.5,\n      \"namerica\": 2.5,\n      \"asia\": 2.1,\n      \"lamerica\": 0.3,\n      \"meast\": 0.2,\n      \"africa\": 0.1\n    }, {\n      \"year\": 2004,\n      \"europe\": 2.6,\n      \"namerica\": 2.7,\n      \"asia\": 2.2,\n      \"lamerica\": 0.3,\n      \"meast\": 0.3,\n      \"africa\": 0.1\n    }, {\n      \"year\": 2005,\n      \"europe\": 2.8,\n      \"namerica\": 2.9,\n      \"asia\": 2.4,\n      \"lamerica\": 0.3,\n      \"meast\": 0.3,\n      \"africa\": 0.1\n    }],\n    \"valueAxes\": [{\n      \"stackType\": \"regular\",\n      \"axisAlpha\": 0.3,\n      \"gridAlpha\": 0\n    }],\n    \"graphs\": [{\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\n      \"fillAlphas\": 0.8,\n      \"labelText\": \"[[value]]\",\n      \"lineAlpha\": 0.3,\n      \"title\": \"Europe\",\n      \"type\": \"column\",\n      \"color\": \"#000000\",\n      \"valueField\": \"europe\"\n    }, {\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\n      \"fillAlphas\": 0.8,\n      \"labelText\": \"[[value]]\",\n      \"lineAlpha\": 0.3,\n      \"title\": \"North America\",\n      \"type\": \"column\",\n      \"color\": \"#000000\",\n      \"valueField\": \"namerica\"\n    }, {\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\n      \"fillAlphas\": 0.8,\n      \"labelText\": \"[[value]]\",\n      \"lineAlpha\": 0.3,\n      \"title\": \"Asia-Pacific\",\n      \"type\": \"column\",\n      \"color\": \"#000000\",\n      \"valueField\": \"asia\"\n    }, {\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\n      \"fillAlphas\": 0.8,\n      \"labelText\": \"[[value]]\",\n      \"lineAlpha\": 0.3,\n      \"title\": \"Latin America\",\n      \"type\": \"column\",\n      \"color\": \"#000000\",\n      \"valueField\": \"lamerica\"\n    }, {\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\n      \"fillAlphas\": 0.8,\n      \"labelText\": \"[[value]]\",\n      \"lineAlpha\": 0.3,\n      \"title\": \"Middle-East\",\n      \"type\": \"column\",\n      \"color\": \"#000000\",\n      \"valueField\": \"meast\"\n    }, {\n      \"balloonText\": \"<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>\",\n      \"fillAlphas\": 0.8,\n      \"labelText\": \"[[value]]\",\n      \"lineAlpha\": 0.3,\n      \"title\": \"Africa\",\n      \"type\": \"column\",\n      \"color\": \"#000000\",\n      \"valueField\": \"africa\"\n    }],\n    \"categoryField\": \"year\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\",\n      \"axisAlpha\": 0,\n      \"gridAlpha\": 0,\n      \"position\": \"left\"\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default StackedColumnChart;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst SimpleColumnChart = () => {\n\n  const config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"dataProvider\": [{\n      \"name\": \"John\",\n      \"points\": 35654,\n      \"color\": \"#7F8DA9\",\n      \"bullet\": \"https://www.amcharts.com/lib/images/faces/A04.png\"\n    }, {\n      \"name\": \"Damon\",\n      \"points\": 65456,\n      \"color\": \"#FEC514\",\n      \"bullet\": \"https://www.amcharts.com/lib/images/faces/C02.png\"\n    }, {\n      \"name\": \"Patrick\",\n      \"points\": 45724,\n      \"color\": \"#DB4C3C\",\n      \"bullet\": \"https://www.amcharts.com/lib/images/faces/D02.png\"\n    }, {\n      \"name\": \"Mark\",\n      \"points\": 13654,\n      \"color\": \"#DAF0FD\",\n      \"bullet\": \"https://www.amcharts.com/lib/images/faces/E01.png\"\n    }],\n    \"valueAxes\": [{\n      \"maximum\": 80000,\n      \"minimum\": 0,\n      \"axisAlpha\": 0,\n      \"dashLength\": 4,\n      \"position\": \"left\"\n    }],\n    \"startDuration\": 1,\n    \"graphs\": [{\n      \"balloonText\": \"<span style='font-size:13px;'>[[category]]: <b>[[value]]</b></span>\",\n      \"bulletOffset\": 10,\n      \"bulletSize\": 52,\n      \"colorField\": \"color\",\n      \"cornerRadiusTop\": 8,\n      \"customBulletField\": \"bullet\",\n      \"fillAlphas\": 0.8,\n      \"lineAlpha\": 0,\n      \"type\": \"column\",\n      \"valueField\": \"points\"\n    }],\n    \"marginTop\": 0,\n    \"marginRight\": 0,\n    \"marginLeft\": 0,\n    \"marginBottom\": 0,\n    \"autoMargins\": false,\n    \"categoryField\": \"name\",\n    \"categoryAxis\": {\n      \"axisAlpha\": 0,\n      \"gridAlpha\": 0,\n      \"inside\": true,\n      \"tickLength\": 0\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default SimpleColumnChart;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst Column3DChart = () => {\n\n  const config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"categoryField\": \"year\",\n    \"rotate\": true,\n    \"startDuration\": 1,\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\",\n      \"position\": \"left\"\n    },\n    \"trendLines\": [],\n    \"graphs\": [\n      {\n        \"balloonText\": \"Income:[[value]]\",\n        \"fillAlphas\": 0.8,\n        \"id\": \"AmGraph-1\",\n        \"lineAlpha\": 0.2,\n        \"title\": \"Income\",\n        \"type\": \"column\",\n        \"valueField\": \"income\"\n      },\n      {\n        \"balloonText\": \"Expenses:[[value]]\",\n        \"fillAlphas\": 0.8,\n        \"id\": \"AmGraph-2\",\n        \"lineAlpha\": 0.2,\n        \"title\": \"Expenses\",\n        \"type\": \"column\",\n        \"valueField\": \"expenses\"\n      }\n    ],\n    \"guides\": [],\n    \"valueAxes\": [\n      {\n        \"id\": \"ValueAxis-1\",\n        \"position\": \"top\",\n        \"axisAlpha\": 0\n      }\n    ],\n    \"allLabels\": [],\n    \"balloon\": {},\n    \"titles\": [],\n    \"dataProvider\": [\n      {\n        \"year\": 2005,\n        \"income\": 23.5,\n        \"expenses\": 18.1\n      },\n      {\n        \"year\": 2006,\n        \"income\": 26.2,\n        \"expenses\": 22.8\n      },\n      {\n        \"year\": 2007,\n        \"income\": 30.1,\n        \"expenses\": 23.9\n      },\n      {\n        \"year\": 2008,\n        \"income\": 29.5,\n        \"expenses\": 25.1\n      },\n      {\n        \"year\": 2009,\n        \"income\": 24.6,\n        \"expenses\": 25\n      }\n    ],\n    \"export\": {\n      \"enabled\": true\n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default Column3DChart;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst Bar3DChart = () => {\n\n  const config = {\n    \"theme\": \"light\",\n    \"type\": \"serial\",\n    \"dataProvider\": [{\n      \"year\": 2005,\n      \"income\": 23.5\n    }, {\n      \"year\": 2006,\n      \"income\": 26.2\n    }, {\n      \"year\": 2007,\n      \"income\": 30.1\n    }, {\n      \"year\": 2008,\n      \"income\": 29.5\n    }, {\n      \"year\": 2009,\n      \"income\": 24.6\n    }],\n    \"valueAxes\": [{\n      \"title\": \"Income in millions, USD\"\n    }],\n    \"graphs\": [{\n      \"balloonText\": \"Income in [[category]]:[[value]]\",\n      \"fillAlphas\": 1,\n      \"lineAlpha\": 0.2,\n      \"title\": \"Income\",\n      \"type\": \"column\",\n      \"valueField\": \"income\"\n    }],\n    \"depth3D\": 20,\n    \"angle\": 30,\n    \"rotate\": true,\n    \"categoryField\": \"year\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\",\n      \"fillAlpha\": 0.05,\n      \"position\": \"left\"\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default Bar3DChart;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst BarAndLineChartMix = () => {\n\n  const config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"handDrawn\": true,\n    \"handDrawScatter\": 3,\n    \"legend\": {\n      \"useGraphSettings\": true,\n      \"markerSize\": 12,\n      \"valueWidth\": 0,\n      \"verticalGap\": 0\n    },\n    \"dataProvider\": [{\n      \"year\": 2005,\n      \"income\": 23.5,\n      \"expenses\": 18.1\n    }, {\n      \"year\": 2006,\n      \"income\": 26.2,\n      \"expenses\": 22.8\n    }, {\n      \"year\": 2007,\n      \"income\": 30.1,\n      \"expenses\": 23.9\n    }, {\n      \"year\": 2008,\n      \"income\": 29.5,\n      \"expenses\": 25.1\n    }, {\n      \"year\": 2009,\n      \"income\": 24.6,\n      \"expenses\": 25\n    }],\n    \"valueAxes\": [{\n      \"minorGridAlpha\": 0.08,\n      \"minorGridEnabled\": true,\n      \"position\": \"top\",\n      \"axisAlpha\": 0\n    }],\n    \"startDuration\": 1,\n    \"graphs\": [{\n      \"balloonText\": \"<span style='font-size:13px;'>[[title]] in [[category]]:<b>[[value]]</b></span>\",\n      \"title\": \"Income\",\n      \"type\": \"column\",\n      \"fillAlphas\": 0.8,\n\n      \"valueField\": \"income\"\n    }, {\n      \"balloonText\": \"<span style='font-size:13px;'>[[title]] in [[category]]:<b>[[value]]</b></span>\",\n      \"bullet\": \"round\",\n      \"bulletBorderAlpha\": 1,\n      \"bulletColor\": \"#FFFFFF\",\n      \"useLineColorForBulletBorder\": true,\n      \"fillAlphas\": 0,\n      \"lineThickness\": 2,\n      \"lineAlpha\": 1,\n      \"bulletSize\": 7,\n      \"title\": \"Expenses\",\n      \"valueField\": \"expenses\"\n    }],\n    \"rotate\": true,\n    \"categoryField\": \"year\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\"\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default BarAndLineChartMix;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst FloatingBarChart = () => {\n\n  const config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"dataProvider\": [{\n      \"country\": \"USA\",\n      \"visits\": 2025\n    }, {\n      \"country\": \"China\",\n      \"visits\": 1882\n    }, {\n      \"country\": \"Japan\",\n      \"visits\": 1809\n    }, {\n      \"country\": \"Germany\",\n      \"visits\": 1322\n    }, {\n      \"country\": \"UK\",\n      \"visits\": 1122\n    }, {\n      \"country\": \"France\",\n      \"visits\": 1114\n    }, {\n      \"country\": \"India\",\n      \"visits\": 984\n    }, {\n      \"country\": \"Spain\",\n      \"visits\": 711\n    }, {\n      \"country\": \"Netherlands\",\n      \"visits\": 665\n    }, {\n      \"country\": \"Russia\",\n      \"visits\": 580\n    }, {\n      \"country\": \"South Korea\",\n      \"visits\": 443\n    }, {\n      \"country\": \"Canada\",\n      \"visits\": 441\n    }, {\n      \"country\": \"Brazil\",\n      \"visits\": 395\n    }],\n    \"valueAxes\": [{\n      \"gridColor\": \"#FFFFFF\",\n      \"gridAlpha\": 0.2,\n      \"dashLength\": 0\n    }],\n    \"gridAboveGraphs\": true,\n    \"startDuration\": 1,\n    \"graphs\": [{\n      \"balloonText\": \"[[category]]: <b>[[value]]</b>\",\n      \"fillAlphas\": 0.8,\n      \"lineAlpha\": 0.2,\n      \"type\": \"column\",\n      \"valueField\": \"visits\"\n    }],\n    \"chartCursor\": {\n      \"categoryBalloonEnabled\": false,\n      \"cursorAlpha\": 0,\n      \"zoomable\": false\n    },\n    \"categoryField\": \"country\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\",\n      \"gridAlpha\": 0,\n      \"tickPosition\": \"start\",\n      \"tickLength\": 20\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default FloatingBarChart;\n","import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst SimpleColumnChart = () => {\n\n  const config = {\n    \"theme\": \"light\",\n    \"type\": \"serial\",\n    \"dataProvider\": [{\n      \"country\": \"USA\",\n      \"year2004\": 3.5,\n      \"year2005\": 4.2\n    }, {\n      \"country\": \"UK\",\n      \"year2004\": 1.7,\n      \"year2005\": 3.1\n    }, {\n      \"country\": \"Canada\",\n      \"year2004\": 2.8,\n      \"year2005\": 2.9\n    }, {\n      \"country\": \"Japan\",\n      \"year2004\": 2.6,\n      \"year2005\": 2.3\n    }, {\n      \"country\": \"France\",\n      \"year2004\": 1.4,\n      \"year2005\": 2.1\n    }, {\n      \"country\": \"Brazil\",\n      \"year2004\": 2.6,\n      \"year2005\": 4.9\n    }, {\n      \"country\": \"Russia\",\n      \"year2004\": 6.4,\n      \"year2005\": 7.2\n    }, {\n      \"country\": \"India\",\n      \"year2004\": 8,\n      \"year2005\": 7.1\n    }, {\n      \"country\": \"China\",\n      \"year2004\": 9.9,\n      \"year2005\": 10.1\n    }],\n    \"valueAxes\": [{\n      \"stackType\": \"3d\",\n      \"unit\": \"%\",\n      \"position\": \"left\",\n      \"title\": \"GDP growth rate\",\n    }],\n    \"startDuration\": 1,\n    \"graphs\": [{\n      \"balloonText\": \"GDP grow in [[category]] (2004): <b>[[value]]</b>\",\n      \"fillAlphas\": 0.9,\n      \"lineAlpha\": 0.2,\n      \"title\": \"2004\",\n      \"type\": \"column\",\n      \"valueField\": \"year2004\"\n    }, {\n      \"balloonText\": \"GDP grow in [[category]] (2005): <b>[[value]]</b>\",\n      \"fillAlphas\": 0.9,\n      \"lineAlpha\": 0.2,\n      \"title\": \"2005\",\n      \"type\": \"column\",\n      \"valueField\": \"year2005\"\n    }],\n    \"plotAreaFillAlphas\": 0.1,\n    \"depth3D\": 60,\n    \"angle\": 30,\n    \"categoryField\": \"country\",\n    \"categoryAxis\": {\n      \"gridPosition\": \"start\"\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n  };\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default SimpleColumnChart;\n","import React from \"react\";\nimport {Card, Col, Row} from \"antd\";\n\nimport ContainerHeader from \"components/ContainerHeader\";\nimport ColumnWithRotatedSeries from \"./Components/ColumnWithRotatedSeries\";\nimport IntlMessages from \"util/IntlMessages\";\nimport SimpleColumnChart from \"./Components/SimpleColumnChart\";\nimport ColumnAndLineMix from \"./Components/ColumnAndLineMix\";\nimport Cylinder3DChart from \"./Components/Cylinder3DChart\";\nimport Column3DChart from \"./Components/Column3DChart\";\nimport LayeredColumnChart from \"./Components/LayeredColumnChart\";\nimport StackedbarChartWithNegativeValues from \"./Components/StackedbarChartWithNegativeValues\";\nimport StackedBarChart from \"../../recharts/bar/Components/StackedBarChart\";\nimport StackedColumnChart from \"./Components/StackedColumnChart\";\nimport ColumnChartWithImagesOnTop from \"./Components/ColumnChartWithImagesOnTop\";\nimport ClusteredBarChart from \"./Components/ClusteredBarChart\";\nimport Bar3DChart from \"./Components/Bar3DChart\";\nimport BarAndLineChartMix from \"./Components/BarAndLineChartMix\";\nimport FloatingBarChart from \"./Components/FloatingBarChart\";\nimport Stacked3DColumnChart from \"./Components/Stacked3DColumnChart\";\n\nconst BarChart = ({match}) => {\n  return (\n    <div className=\"gx-main-content\">\n      <ContainerHeader title={<IntlMessages id=\"sidebar.chart.bar\"/>} match={match}/>\n\n      <Row>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Column With Rotated Series\">\n            <ColumnWithRotatedSeries/>\n          </Card>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Simple Column Chart\">\n            <SimpleColumnChart/>\n          </Card>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Column And Line Mix\">\n            <ColumnAndLineMix/>\n          </Card>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Stacked Bar Chart With Negative Values\">\n            <StackedbarChartWithNegativeValues/>\n          </Card>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Column 3D Chart\">\n            <Column3DChart/>\n          </Card>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Cylinder 3D Chart\">\n            <Cylinder3DChart/>\n          </Card>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Layered Column Chart\">\n            <LayeredColumnChart/>\n          </Card>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"3D Stacked Column Chart\">\n            <Stacked3DColumnChart/>\n          </Card>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Layered Column Chart\">\n            <FloatingBarChart/>\n          </Card>\n        </Col>\n\n\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Bar And Line Chart Mix\">\n            <BarAndLineChartMix/>\n          </Card>\n        </Col>\n\n\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"3D Bar Chart\">\n            <Bar3DChart/>\n          </Card>\n        </Col>\n\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Column And Line Mix\">\n            <ClusteredBarChart/>\n          </Card>\n        </Col>\n\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Column Chart With Images On Top\">\n            <ColumnChartWithImagesOnTop/>\n          </Card>\n        </Col>\n\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Column With Rotated Series\">\n            <ColumnWithRotatedSeries/>\n          </Card>\n        </Col>\n\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Stacked Bar Chart\">\n            <StackedBarChart/>\n          </Card>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Card className=\"gx-card\" title=\"Stacked Column Chart\">\n            <StackedColumnChart/>\n          </Card>\n        </Col>\n\n      </Row>\n    </div>\n  );\n};\n\nexport default BarChart;\n"],"sourceRoot":""}