{"version":3,"sources":["routes/extensions/map/googlemap/eventHanlder/Components/EventHandler.js","routes/extensions/map/googlemap/eventHanlder/index.js"],"names":["google","window","GettingPropertiesExampleGoogleMap","withGoogleMap","props","react_default","a","createElement","lib","ref","onMapMounted","onZoomChanged","defaultCenter","center","zoom","defaultPosition","className","content","EventHandler","state","handleMapMounted","_this","bind","Object","assertThisInitialized","handleZoomChanged","map","this","_map","nextZoom","getZoom","setState","concat","loadingElement","style","height","containerElement","mapElement","maps","LatLng","Component","EventHanlder","card","title","IntlMessages","id","EventHandler_EventHandler"],"mappings":"4LAGMA,EAASC,OAAOD,OAChBE,EAAoCC,wBAAc,SAAAC,GAAK,OAC3DC,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACEC,IAAKL,EAAMM,aACXC,cAAeP,EAAMO,cACrBC,cAAeR,EAAMS,OACrBC,KAAMV,EAAMU,MAEZT,EAAAC,EAAAC,cAACC,EAAA,WAAD,CACEO,gBAAiBX,EAAMS,QAEvBR,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBZ,EAAMa,aAUxBC,6MAEnBC,MAAQ,CACNL,KAAM,GACNG,QAAO,2BAGTG,iBAAmBC,EAAKD,iBAAiBE,KAAtBC,OAAAC,EAAA,EAAAD,CAAAF,MACnBI,kBAAoBJ,EAAKI,kBAAkBH,KAAvBC,OAAAC,EAAA,EAAAD,CAAAF,oFAEHK,GACfC,KAAKC,KAAOF,8CAIZ,IAAMG,EAAWF,KAAKC,KAAKE,UACvBD,IAAaF,KAAKR,MAAML,MAG1Ba,KAAKI,SAAS,CACZjB,KAAMe,EACNZ,QAAO,SAAAe,OAAWH,sCAMtB,OACExB,EAAAC,EAAAC,cAACL,EAAD,CACE+B,eAAgB5B,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAACC,OAAM,UACnCC,iBAAkB/B,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAACC,OAAM,WACrCE,WAAYhC,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAACC,OAAM,UAC/BzB,aAAciB,KAAKP,iBACnBT,cAAegB,KAAKF,kBACpBZ,OAAQ,IAAIb,EAAOsC,KAAKC,OAAO,WAAY,YAC3CzB,KAAMa,KAAKR,MAAML,KACjBG,QAASU,KAAKR,MAAMF,iBApCcuB,oBCV3BC,UARM,WACnB,OACEpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAM1B,UAAU,UAAU2B,MAAOtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAcC,GAAG,+BAChDxC,EAAAC,EAAAC,cAACuC,EAAD","file":"static/js/160.93550103.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {GoogleMap, InfoWindow, withGoogleMap} from \"react-google-maps\";\n\nconst google = window.google;\nconst GettingPropertiesExampleGoogleMap = withGoogleMap(props => (\n  <GoogleMap\n    ref={props.onMapMounted}\n    onZoomChanged={props.onZoomChanged}\n    defaultCenter={props.center}\n    zoom={props.zoom}\n  >\n    <InfoWindow\n      defaultPosition={props.center}\n    >\n      <div className=\"gx-map-content\">{props.content}</div>\n    </InfoWindow>\n  </GoogleMap>\n));\n\n/*\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class EventHandler extends Component {\n\n  state = {\n    zoom: 15,\n    content: `Change the zoom level`,\n  };\n\n  handleMapMounted = this.handleMapMounted.bind(this);\n  handleZoomChanged = this.handleZoomChanged.bind(this);\n\n  handleMapMounted(map) {\n    this._map = map;\n  }\n\n  handleZoomChanged() {\n    const nextZoom = this._map.getZoom();\n    if (nextZoom !== this.state.zoom) {\n      // Notice: Check zoom equality here,\n      // or it will fire zoom_changed event infinitely\n      this.setState({\n        zoom: nextZoom,\n        content: `Zoom: ${nextZoom}`,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <GettingPropertiesExampleGoogleMap\n        loadingElement={<div style={{height: `100%`}}/>}\n        containerElement={<div style={{height: `550px`}}/>}\n        mapElement={<div style={{height: `100%`}}/>}\n        onMapMounted={this.handleMapMounted}\n        onZoomChanged={this.handleZoomChanged}\n        center={new google.maps.LatLng(47.646935, -122.303763)}\n        zoom={this.state.zoom}\n        content={this.state.content}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport {Card} from \"antd\";\n\nimport EventHandler from \"./Components/EventHandler\";\nimport IntlMessages from \"util/IntlMessages\";\n\nconst EventHanlder = () => {\n  return (\n    <Card className=\"gx-card\" title={<IntlMessages id=\"sidebar.map.eventListener\"/>}>\n      <EventHandler/>\n    </Card>\n  );\n};\n\nexport default EventHanlder;\n"],"sourceRoot":""}