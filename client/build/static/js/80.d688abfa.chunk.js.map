{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/antd/es/tree/util.js","../node_modules/antd/es/tree/DirectoryTree.js","../node_modules/antd/es/tree/Tree.js","../node_modules/antd/es/tree/index.js","routes/components/dataDisplay/Tree/Basic.js","routes/components/dataDisplay/Tree/BasicControl.js","routes/components/dataDisplay/Tree/Dragable.js","routes/components/dataDisplay/Tree/LoadData.js","routes/components/dataDisplay/Tree/Searchable.js","routes/components/dataDisplay/Tree/TreeLine.js","routes/components/dataDisplay/Tree/index.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__","Record","calcRangeKeys","rootChildren","expandedKeys","startKey","endKey","keys","record","None","traverseNodesKey","callback","util","forEach","node","key","children","props","End","matchKey","push","Start","indexOf","_typeof","obj","constructor","_extends","assign","target","arguments","source","hasOwnProperty","apply","this","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","__rest","s","e","t","getOwnPropertySymbols","getIcon","isLeaf","expanded","react","icon","type","DirectoryTree_DirectoryTree","_React$Component","DirectoryTree","_this","instance","Constructor","_classCallCheck","onExpand","info","setUncontrolledState","onClick","event","_this$props","expandAction","onDebounceExpand","onDoubleClick","_this$props2","onSelect","newSelectedKeys","_this$props3","multiple","_this$state$expandedK","state","nativeEvent","_node$props$eventKey","eventKey","newState","ctrlPick","ctrlKey","metaKey","shiftPick","shiftKey","lastSelectedKey","cachedSelectedKeys","Set","concat","selectedKeys","setTreeRef","tree","expandFolderNode","onNodeExpand","omit_js_es","setState","renderDirectoryTree","_ref","getPrefixCls","_a","customizePrefixCls","prefixCls","className","_this$state","connectClassName","classnames_default","Tree_Tree","ref","defaultExpandAll","defaultExpandParent","defaultExpandedKeys","keyEntities","defaultSelectedKeys","getFullKeyList","debounce_default","leading","protoProps","staticProps","subClass","superClass","create","value","_inherits","nextProps","config_provider","defaultProps","showIcon","react_lifecycles_compat_es","tree_DirectoryTree","Tree_typeof","Tree_extends","Tree_defineProperties","Tree_possibleConstructorReturn","Tree_assertThisInitialized","Tree_getPrototypeOf","Tree_setPrototypeOf","Tree","Tree_classCallCheck","renderSwitcherIcon","switcherIcon","loading","showLine","theme","switcherCls","switcherOriginCls","renderTree","_ref2","_switcherIcon","checkable","es","nodeProps","Tree_inherits","TreeNode","openAnimation","appear","Basic","console","log","onCheck","checkedKeys","react_default","a","createElement","card","title","defaultCheckedKeys","disabled","disableCheckbox","style","color","React","Component","treeData","BasicControl","autoExpandParent","renderTreeNodes","data","map","item","BasicControl_TreeNode","dataRef","gData","generateData","_level","_preKey","_tns","preKey","tns","level","index","Dragable","onDragEnter","onDrop","dragObj","ar","dropKey","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","loop","toConsumableArray","splice","dropToGap","draggable","Dragable_TreeNode","LoadData","onLoadData","treeNode","Promise","resolve","setTimeout","LoadData_TreeNode","loadData","Search","Input","dataList","generateList","getParentKey","parentKey","some","Searchable","searchValue","onChange","filter","marginBottom","placeholder","beforeStr","substr","afterStr","Searchable_TreeNode","TreeLine","TreeLine_TreeNode","row","col","lg","md","sm","xs","Tree_Basic","Tree_BasicControl","Tree_Dragable","Tree_LoadData","Tree_Searchable","Tree_TreeLine"],"mappings":"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","file":"static/js/80.d688abfa.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import { getNodeChildren, convertTreeToEntities } from \"rc-tree/es/util\";\nvar Record;\n\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {})); // TODO: Move this logic into `rc-tree`\n\n\nfunction traverseNodesKey(rootChildren, callback) {\n  var nodeList = getNodeChildren(rootChildren) || [];\n\n  function processNode(node) {\n    var key = node.key,\n        children = node.props.children;\n\n    if (callback(key) !== false) {\n      traverseNodesKey(children, callback);\n    }\n  }\n\n  nodeList.forEach(processNode);\n}\n\nexport function getFullKeyList(children) {\n  var _convertTreeToEntitie = convertTreeToEntities(children),\n      keyEntities = _convertTreeToEntitie.keyEntities;\n\n  return Object.keys(keyEntities);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\n\nexport function calcRangeKeys(rootChildren, expandedKeys, startKey, endKey) {\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(rootChildren, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n  return keys;\n}","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { conductExpandParent, convertTreeToEntities } from \"rc-tree/es/util\";\nimport { ConfigConsumer } from '../config-provider';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Tree from './Tree';\nimport { calcRangeKeys, getFullKeyList } from './util';\nimport Icon from '../icon';\n\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n      expanded = props.expanded;\n\n  if (isLeaf) {\n    return React.createElement(Icon, {\n      type: \"file\"\n    });\n  }\n\n  return React.createElement(Icon, {\n    type: expanded ? 'folder-open' : 'folder'\n  });\n}\n\nvar DirectoryTree =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DirectoryTree, _React$Component);\n\n  function DirectoryTree(props) {\n    var _this;\n\n    _classCallCheck(this, DirectoryTree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DirectoryTree).call(this, props));\n\n    _this.onExpand = function (expandedKeys, info) {\n      var onExpand = _this.props.onExpand;\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys\n      }); // Call origin function\n\n\n      if (onExpand) {\n        return onExpand(expandedKeys, info);\n      }\n\n      return undefined;\n    };\n\n    _this.onClick = function (event, node) {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          expandAction = _this$props.expandAction; // Expand the tree\n\n      if (expandAction === 'click') {\n        _this.onDebounceExpand(event, node);\n      }\n\n      if (onClick) {\n        onClick(event, node);\n      }\n    };\n\n    _this.onDoubleClick = function (event, node) {\n      var _this$props2 = _this.props,\n          onDoubleClick = _this$props2.onDoubleClick,\n          expandAction = _this$props2.expandAction; // Expand the tree\n\n      if (expandAction === 'doubleClick') {\n        _this.onDebounceExpand(event, node);\n      }\n\n      if (onDoubleClick) {\n        onDoubleClick(event, node);\n      }\n    };\n\n    _this.onSelect = function (keys, event) {\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple,\n          children = _this$props3.children;\n      var _this$state$expandedK = _this.state.expandedKeys,\n          expandedKeys = _this$state$expandedK === void 0 ? [] : _this$state$expandedK;\n      var node = event.node,\n          nativeEvent = event.nativeEvent;\n      var _node$props$eventKey = node.props.eventKey,\n          eventKey = _node$props$eventKey === void 0 ? '' : _node$props$eventKey;\n      var newState = {}; // Windows / Mac single pick\n\n      var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n      var shiftPick = nativeEvent.shiftKey; // Generate new selected keys\n\n      var newSelectedKeys;\n\n      if (multiple && ctrlPick) {\n        // Control click\n        newSelectedKeys = keys;\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n      } else if (multiple && shiftPick) {\n        // Shift click\n        newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(_this.cachedSelectedKeys || []), _toConsumableArray(calcRangeKeys(children, expandedKeys, eventKey, _this.lastSelectedKey)))));\n      } else {\n        // Single click\n        newSelectedKeys = [eventKey];\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n      }\n\n      newState.selectedKeys = newSelectedKeys;\n\n      if (onSelect) {\n        onSelect(newSelectedKeys, event);\n      }\n\n      _this.setUncontrolledState(newState);\n    };\n\n    _this.setTreeRef = function (node) {\n      _this.tree = node;\n    };\n\n    _this.expandFolderNode = function (event, node) {\n      var isLeaf = node.props.isLeaf;\n\n      if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n        return;\n      } // Get internal rc-tree\n\n\n      var internalTree = _this.tree.tree; // Call internal rc-tree expand function\n      // https://github.com/ant-design/ant-design/issues/12567\n\n      internalTree.onNodeExpand(event, node);\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var newState = omit(state, Object.keys(_this.props));\n\n      if (Object.keys(newState).length) {\n        _this.setState(newState);\n      }\n    };\n\n    _this.renderDirectoryTree = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          className = _a.className,\n          props = __rest(_a, [\"prefixCls\", \"className\"]);\n\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          selectedKeys = _this$state.selectedKeys;\n      var prefixCls = getPrefixCls('tree', customizePrefixCls);\n      var connectClassName = classNames(\"\".concat(prefixCls, \"-directory\"), className);\n      return React.createElement(Tree, _extends({\n        icon: getIcon,\n        ref: _this.setTreeRef\n      }, props, {\n        prefixCls: prefixCls,\n        className: connectClassName,\n        expandedKeys: expandedKeys,\n        selectedKeys: selectedKeys,\n        onSelect: _this.onSelect,\n        onClick: _this.onClick,\n        onDoubleClick: _this.onDoubleClick,\n        onExpand: _this.onExpand\n      }));\n    };\n\n    var defaultExpandAll = props.defaultExpandAll,\n        defaultExpandParent = props.defaultExpandParent,\n        expandedKeys = props.expandedKeys,\n        defaultExpandedKeys = props.defaultExpandedKeys,\n        children = props.children;\n\n    var _convertTreeToEntitie = convertTreeToEntities(children),\n        keyEntities = _convertTreeToEntitie.keyEntities; // Selected keys\n\n\n    _this.state = {\n      selectedKeys: props.selectedKeys || props.defaultSelectedKeys || []\n    }; // Expanded keys\n\n    if (defaultExpandAll) {\n      _this.state.expandedKeys = getFullKeyList(props.children);\n    } else if (defaultExpandParent) {\n      _this.state.expandedKeys = conductExpandParent(expandedKeys || defaultExpandedKeys, keyEntities);\n    } else {\n      _this.state.expandedKeys = expandedKeys || defaultExpandedKeys;\n    }\n\n    _this.onDebounceExpand = debounce(_this.expandFolderNode, 200, {\n      leading: true\n    });\n    return _this;\n  }\n\n  _createClass(DirectoryTree, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderDirectoryTree);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('expandedKeys' in nextProps) {\n        return {\n          expandedKeys: nextProps.expandedKeys\n        };\n      }\n\n      if ('selectedKeys' in nextProps) {\n        return {\n          selectedKeys: nextProps.selectedKeys\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return DirectoryTree;\n}(React.Component);\n\nDirectoryTree.defaultProps = {\n  showIcon: true,\n  expandAction: 'click'\n};\npolyfill(DirectoryTree);\nexport default DirectoryTree;","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport DirectoryTree from './DirectoryTree';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport animation from '../_util/openAnimation';\n\nvar Tree =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tree).apply(this, arguments));\n\n    _this.renderSwitcherIcon = function (prefixCls, switcherIcon, _ref) {\n      var isLeaf = _ref.isLeaf,\n          expanded = _ref.expanded,\n          loading = _ref.loading;\n      var showLine = _this.props.showLine;\n\n      if (loading) {\n        return React.createElement(Icon, {\n          type: \"loading\",\n          className: \"\".concat(prefixCls, \"-switcher-loading-icon\")\n        });\n      }\n\n      if (showLine) {\n        if (isLeaf) {\n          return React.createElement(Icon, {\n            type: \"file\",\n            className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n          });\n        }\n\n        return React.createElement(Icon, {\n          type: expanded ? 'minus-square' : 'plus-square',\n          className: \"\".concat(prefixCls, \"-switcher-line-icon\"),\n          theme: \"outlined\"\n        });\n      } else {\n        var switcherCls = \"\".concat(prefixCls, \"-switcher-icon\");\n\n        if (isLeaf) {\n          return null;\n        } else if (switcherIcon) {\n          var switcherOriginCls = switcherIcon.props.className || '';\n          return React.cloneElement(switcherIcon, {\n            className: [switcherOriginCls, switcherCls]\n          });\n        } else {\n          return React.createElement(Icon, {\n            type: \"caret-down\",\n            className: switcherCls,\n            theme: \"filled\"\n          });\n        }\n      }\n    };\n\n    _this.setTreeRef = function (node) {\n      _this.tree = node;\n    };\n\n    _this.renderTree = function (_ref2) {\n      var getPrefixCls = _ref2.getPrefixCls;\n      var props = _this.props;\n      var customizePrefixCls = props.prefixCls,\n          className = props.className,\n          showIcon = props.showIcon,\n          _switcherIcon = props.switcherIcon;\n      var checkable = props.checkable;\n      var prefixCls = getPrefixCls('tree', customizePrefixCls);\n      return React.createElement(RcTree, _extends({\n        ref: _this.setTreeRef\n      }, props, {\n        prefixCls: prefixCls,\n        className: classNames(!showIcon && \"\".concat(prefixCls, \"-icon-hide\"), className),\n        checkable: checkable ? React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-checkbox-inner\")\n        }) : checkable,\n        switcherIcon: function switcherIcon(nodeProps) {\n          return _this.renderSwitcherIcon(prefixCls, _switcherIcon, nodeProps);\n        }\n      }), _this.props.children);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderTree);\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nexport { Tree as default };\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n  checkable: false,\n  showIcon: false,\n  openAnimation: _extends({}, animation, {\n    appear: null\n  })\n};","import Tree from './Tree';\nexport default Tree;","import React from \"react\";\nimport {Card, Tree} from \"antd\";\n\nconst TreeNode = Tree.TreeNode;\n\nclass Basic extends React.Component {\n  onSelect = (selectedKeys, info) => {\n    console.log('selected', selectedKeys, info);\n  };\n  onCheck = (checkedKeys, info) => {\n    console.log('onCheck', checkedKeys, info);\n  };\n\n  render() {\n    return (\n      <Card title=\"Basic\" className=\"gx-card\">\n        <Tree\n          checkable\n          defaultExpandedKeys={['0-0-0', '0-0-1']}\n          defaultSelectedKeys={['0-0-0', '0-0-1']}\n          defaultCheckedKeys={['0-0-0', '0-0-1']}\n          onSelect={this.onSelect}\n          onCheck={this.onCheck}\n        >\n          <TreeNode title=\"parent 1\" key=\"0-0\">\n            <TreeNode title=\"parent 1-0\" key=\"0-0-0\" disabled>\n              <TreeNode title=\"leaf\" key=\"0-0-0-0\" disableCheckbox/>\n              <TreeNode title=\"leaf\" key=\"0-0-0-1\"/>\n            </TreeNode>\n            <TreeNode title=\"parent 1-1\" key=\"0-0-1\">\n              <TreeNode title={<span style={{color: '#1890ff'}}>sss</span>} key=\"0-0-1-0\"/>\n            </TreeNode>\n          </TreeNode>\n        </Tree>\n      </Card>\n    );\n  }\n}\n\n\nexport default Basic;\n","import React from \"react\";\nimport {Card, Tree} from \"antd\";\n\nconst TreeNode = Tree.TreeNode;\n\nconst treeData = [{\n  title: '0-0',\n  key: '0-0',\n  children: [{\n    title: '0-0-0',\n    key: '0-0-0',\n    children: [\n      {title: '0-0-0-0', key: '0-0-0-0'},\n      {title: '0-0-0-1', key: '0-0-0-1'},\n      {title: '0-0-0-2', key: '0-0-0-2'},\n    ],\n  }, {\n    title: '0-0-1',\n    key: '0-0-1',\n    children: [\n      {title: '0-0-1-0', key: '0-0-1-0'},\n      {title: '0-0-1-1', key: '0-0-1-1'},\n      {title: '0-0-1-2', key: '0-0-1-2'},\n    ],\n  }, {\n    title: '0-0-2',\n    key: '0-0-2',\n  }],\n}, {\n  title: '0-1',\n  key: '0-1',\n  children: [\n    {title: '0-1-0-0', key: '0-1-0-0'},\n    {title: '0-1-0-1', key: '0-1-0-1'},\n    {title: '0-1-0-2', key: '0-1-0-2'},\n  ],\n}, {\n  title: '0-2',\n  key: '0-2',\n}];\n\nclass BasicControl extends React.Component {\n  state = {\n    expandedKeys: ['0-0-0', '0-0-1'],\n    autoExpandParent: true,\n    checkedKeys: ['0-0-0'],\n    selectedKeys: [],\n  };\n  onExpand = (expandedKeys) => {\n    // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n    // or, you can remove all expanded children keys.\n    this.setState({\n      expandedKeys,\n      autoExpandParent: false,\n    });\n  };\n  onCheck = (checkedKeys) => {\n    console.log('onCheck', checkedKeys);\n    this.setState({checkedKeys});\n  };\n  onSelect = (selectedKeys, info) => {\n    console.log('onSelect', info);\n    this.setState({selectedKeys});\n  };\n  renderTreeNodes = (data) => {\n    return data.map((item) => {\n      if (item.children) {\n        return (\n          <TreeNode title={item.title} key={item.key} dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </TreeNode>\n        );\n      }\n      return <TreeNode {...item} />;\n    });\n  };\n\n  render() {\n    return (\n      <Card title=\"Basic Control\" className=\"gx-card\">\n        <Tree\n          checkable\n          onExpand={this.onExpand}\n          expandedKeys={this.state.expandedKeys}\n          autoExpandParent={this.state.autoExpandParent}\n          onCheck={this.onCheck}\n          checkedKeys={this.state.checkedKeys}\n          onSelect={this.onSelect}\n          selectedKeys={this.state.selectedKeys}\n        >\n          {this.renderTreeNodes(treeData)}\n        </Tree>\n      </Card>\n    );\n  }\n}\n\n\nexport default BasicControl;\n","import React from \"react\";\nimport {Card, Tree} from \"antd\";\n\nconst TreeNode = Tree.TreeNode;\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n\n  const children = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({title: key, key});\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\ngenerateData(z);\n\nclass Dragable extends React.Component {\n  state = {\n    gData,\n    expandedKeys: ['0-0', '0-0-0', '0-0-0-0'],\n  };\n  onDragEnter = (info) => {\n    console.log(info);\n    // expandedKeys 需要受控时设置\n    // this.setState({\n    //   expandedKeys: info.expandedKeys,\n    // });\n  };\n  onDrop = (info) => {\n    console.log(info);\n    const dropKey = info.node.props.eventKey;\n    const dragKey = info.dragNode.props.eventKey;\n    const dropPos = info.node.props.pos.split('-');\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n    // const dragNodesKeys = info.dragNodesKeys;\n    const loop = (data, key, callback) => {\n      data.forEach((item, index, arr) => {\n        if (item.key === key) {\n          return callback(item, index, arr);\n        }\n        if (item.children) {\n          return loop(item.children, key, callback);\n        }\n      });\n    };\n    const data = [...this.state.gData];\n    let dragObj;\n    loop(data, dragKey, (item, index, arr) => {\n      arr.splice(index, 1);\n      dragObj = item;\n    });\n    if (info.dropToGap) {\n      let ar;\n      let i;\n      loop(data, dropKey, (item, index, arr) => {\n        ar = arr;\n        i = index;\n      });\n      if (dropPosition === -1) {\n        ar.splice(i, 0, dragObj);\n      } else {\n        ar.splice(i + 1, 0, dragObj);\n      }\n    } else {\n      loop(data, dropKey, (item) => {\n        item.children = item.children || [];\n        // where to insert 示例添加到尾部，可以是随意位置\n        item.children.push(dragObj);\n      });\n    }\n    this.setState({\n      gData: data,\n    });\n  };\n\n  render() {\n    const loop = data => data.map((item) => {\n      if (item.children && item.children.length) {\n        return <TreeNode key={item.key} title={item.key}>{loop(item.children)}</TreeNode>;\n      }\n      return <TreeNode key={item.key} title={item.key}/>;\n    });\n    return (\n      <Card title=\"Dragable\" className=\"gx-card\">\n        <Tree\n          className=\"draggable-tree\"\n          defaultExpandedKeys={this.state.expandedKeys}\n          draggable\n          onDragEnter={this.onDragEnter}\n          onDrop={this.onDrop}\n        >\n          {loop(this.state.gData)}\n        </Tree>\n      </Card>\n    );\n  }\n}\n\n\nexport default Dragable;\n","import React from \"react\";\nimport {Card, Tree} from \"antd\";\n\nconst TreeNode = Tree.TreeNode;\n\nclass LoadData extends React.Component {\n  state = {\n    treeData: [\n      {title: 'Expand to load', key: '0'},\n      {title: 'Expand to load', key: '1'},\n      {title: 'Tree Node', key: '2', isLeaf: true},\n    ],\n  };\n  onLoadData = (treeNode) => {\n    return new Promise((resolve) => {\n      if (treeNode.props.children) {\n        resolve();\n        return;\n      }\n      setTimeout(() => {\n        treeNode.props.dataRef.children = [\n          {title: 'Child Node', key: `${treeNode.props.eventKey}-0`},\n          {title: 'Child Node', key: `${treeNode.props.eventKey}-1`},\n        ];\n        this.setState({\n          treeData: [...this.state.treeData],\n        });\n        resolve();\n      }, 1000);\n    });\n  };\n  renderTreeNodes = (data) => {\n    return data.map((item) => {\n      if (item.children) {\n        return (\n          <TreeNode title={item.title} key={item.key} dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </TreeNode>\n        );\n      }\n      return <TreeNode {...item} dataRef={item}/>;\n    });\n  };\n\n  render() {\n    return (\n      <Card title=\"Load Data\" className=\"gx-card\">\n        <Tree loadData={this.onLoadData}>\n          {this.renderTreeNodes(this.state.treeData)}\n        </Tree>\n      </Card>\n    );\n  }\n}\n\n\nexport default LoadData;\n","import React from \"react\";\nimport {Card, Input, Tree} from \"antd\";\n\nconst TreeNode = Tree.TreeNode;\nconst Search = Input.Search;\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n\n  const children = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({title: key, key});\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\ngenerateData(z);\n\nconst dataList = [];\nconst generateList = (data) => {\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i];\n    const key = node.key;\n    dataList.push({key, title: key});\n    if (node.children) {\n      generateList(node.children, node.key);\n    }\n  }\n};\ngenerateList(gData);\n\nconst getParentKey = (key, tree) => {\n  let parentKey;\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    if (node.children) {\n      if (node.children.some(item => item.key === key)) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n  return parentKey;\n};\n\nclass Searchable extends React.Component {\n  state = {\n    expandedKeys: [],\n    searchValue: '',\n    autoExpandParent: true,\n  };\n  onExpand = (expandedKeys) => {\n    this.setState({\n      expandedKeys,\n      autoExpandParent: false,\n    });\n  };\n  onChange = (e) => {\n    const value = e.target.value;\n    const expandedKeys = dataList.map((item) => {\n      if (item.key.indexOf(value) > -1) {\n        return getParentKey(item.key, gData);\n      }\n      return null;\n    }).filter((item, i, self) => item && self.indexOf(item) === i);\n    this.setState({\n      expandedKeys,\n      searchValue: value,\n      autoExpandParent: true,\n    });\n  };\n\n  render() {\n    const {searchValue, expandedKeys, autoExpandParent} = this.state;\n    const loop = data => data.map((item) => {\n      const index = item.key.indexOf(searchValue);\n      const beforeStr = item.key.substr(0, index);\n      const afterStr = item.key.substr(index + searchValue.length);\n      const title = index > -1 ? (\n        <span>\n          {beforeStr}\n          <span style={{color: '#f50'}}>{searchValue}</span>\n          {afterStr}\n        </span>\n      ) : <span>{item.key}</span>;\n      if (item.children) {\n        return (\n          <TreeNode key={item.key} title={title}>\n            {loop(item.children)}\n          </TreeNode>\n        );\n      }\n      return <TreeNode key={item.key} title={title}/>;\n    });\n    return (\n      <Card title=\"Searchable\" className=\"gx-card\">\n        <Search style={{marginBottom: 8}} placeholder=\"Search\" onChange={this.onChange}/>\n        <Tree\n          onExpand={this.onExpand}\n          expandedKeys={expandedKeys}\n          autoExpandParent={autoExpandParent}\n        >\n          {loop(gData)}\n        </Tree>\n      </Card>\n    );\n  }\n}\n\nexport default Searchable;\n","import React from \"react\";\nimport {Card, Tree} from \"antd\";\n\nconst TreeNode = Tree.TreeNode;\n\nclass TreeLine extends React.Component {\n  onSelect = (selectedKeys, info) => {\n    console.log('selected', selectedKeys, info);\n  };\n\n  render() {\n    return (\n      <Card title=\"TreeLine\" className=\"gx-card\">\n        <Tree\n          showLine\n          defaultExpandedKeys={['0-0-0']}\n          onSelect={this.onSelect}\n        >\n          <TreeNode title=\"parent 1\" key=\"0-0\">\n            <TreeNode title=\"parent 1-0\" key=\"0-0-0\">\n              <TreeNode title=\"leaf\" key=\"0-0-0-0\"/>\n              <TreeNode title=\"leaf\" key=\"0-0-0-1\"/>\n              <TreeNode title=\"leaf\" key=\"0-0-0-2\"/>\n            </TreeNode>\n            <TreeNode title=\"parent 1-1\" key=\"0-0-1\">\n              <TreeNode title=\"leaf\" key=\"0-0-1-0\"/>\n            </TreeNode>\n            <TreeNode title=\"parent 1-2\" key=\"0-0-2\">\n              <TreeNode title=\"leaf\" key=\"0-0-2-0\"/>\n              <TreeNode title=\"leaf\" key=\"0-0-2-1\"/>\n            </TreeNode>\n          </TreeNode>\n        </Tree>\n      </Card>\n    );\n  }\n}\n\nexport default TreeLine;\n","import React from \"react\";\nimport {Col, Row} from \"antd\";\n\nimport Basic from \"./Basic\";\nimport BasicControl from \"./BasicControl\";\nimport Dragable from \"./Dragable\";\nimport LoadData from \"./LoadData\";\nimport Searchable from \"./Searchable\";\nimport TreeLine from \"./TreeLine\";\n\n\nconst Tree = () => {\n  return (\n    <Row>\n      <Col lg={12} md={12} sm={24} xs={24}>\n        <Basic/>\n        <BasicControl/>\n        <Dragable/>\n      </Col>\n      <Col lg={12} md={12} sm={24} xs={24}>\n        <LoadData/>\n        <Searchable/>\n        <TreeLine/>\n      </Col>\n    </Row>\n  );\n};\n\n\nexport default Tree;\n"],"sourceRoot":""}