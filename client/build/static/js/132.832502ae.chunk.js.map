{"version":3,"sources":["routes/components/dataEntry/Form/profile.js","routes/components/dataEntry/Form/index.js"],"names":["FormItem","Form","Item","Option","Select","Profile","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","console","log","firebase","onAuthStateChanged","user","uid","ref","child","update","Name","Firstname","Email","email","Phone","phone","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","concat","getFieldDecorator","this","formItemLayout","labelCol","xs","span","sm","wrapperCol","prefixSelector","initialValue","react_default","a","createElement","es_select","style","width","card","className","title","es_form","onSubmit","Object","assign","label","rules","required","message","whitespace","input","type","addonBefore","offset","es_button","htmlType","Component","ProfileForm","create","connect","auth","authUser","row","col","profile"],"mappings":"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","file":"static/js/132.832502ae.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Card, Form, Input, Select} from \"antd\";\r\nimport * as firebase from 'firebase';\r\nimport {connect} from 'react-redux';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass Profile extends Component {\r\n    \r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  \r\n  handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        firebase.auth().onAuthStateChanged(function(user){\r\n          if(user){\r\n            console.log(user.uid);\r\n            \r\n            firebase.database().ref(\"users\").child(user.uid).update({\r\n              \"Name\":values.Firstname,\r\n              \"Email\":values.email,\r\n              \"Phone\":values.phone\r\n            });\r\n            console.log(values);\r\n            \r\n\r\n          }\r\n        })      \r\n      }\r\n    });\r\n  }\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({confirmDirty: this.state.confirmDirty || !!value});\r\n  }\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], {force: true});\r\n    }\r\n    callback();\r\n  }\r\n  handleWebsiteChange = (value) => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({autoCompleteResult});\r\n  }\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 8},\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 16},\r\n      },\r\n    };\r\n    \r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n\r\n    \r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n      initialValue: '91',\r\n    })(\r\n      <Select style={{width: 70}}>\r\n        <Option value=\"91\">+91</Option>\r\n        <Option value=\"00\">+00</Option>\r\n      </Select>\r\n    );\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Profile Form\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label={(\r\n              <span>\r\n              Name                    \r\n            </span>\r\n            )}          >\r\n            {getFieldDecorator('Firstname', {\r\n              rules: [{required: true, message: 'Please input your Firstname!', whitespace: true}],\r\n            })(\r\n              <Input/>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label={(\r\n              <span>\r\n              Email                    \r\n            </span>\r\n            )}          >\r\n            {getFieldDecorator('email', {\r\n              rules: [{required: true, type: 'email', message: 'The input is not valid E-mail!', whitespace: true}],\r\n            })(\r\n              <Input/>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Phone Number\"\r\n          >\r\n            {getFieldDecorator('phone', {\r\n              rules: [{required: true, message: 'Please input your phone number!'}],\r\n            })(\r\n              <Input addonBefore={prefixSelector} style={{width: '100%'}}/>\r\n            )}\r\n          </FormItem>\r\n          \r\n          <FormItem {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">update Profile</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst ProfileForm = Form.create()(Profile);\r\nconst mapStateToProps = (state) => {\r\n    console.log(state.auth.authUser);    \r\n}\r\nexport default connect(mapStateToProps)(ProfileForm);\r\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\n// import Basic from \"./Basic\";\r\n// import HorizontalLoginForm from \"./HorizontalLoginForm\";\r\n// import Registration from \"./Registration\";\r\nimport Profile from \"./profile\";\r\n// import AdvancedSearch from \"./AdvancedSearch\";\r\n// import DynamicFormItem from \"./DynamicFormItem\";\r\n// import TimeRelatedControls from \"./TimeRelatedControls\";\r\n// import CustomizedFormControls from \"./CustomizedFormControls\";\r\n// import StoreFormData from \"./StoreFormData\";\r\n// import CustomizedValidation from \"./CustomizedValidation\";\r\n// import CoordinatedControls from \"./CoordinatedControls\";\r\n// import FormLayout from \"./FormLayout\";\r\n// import DynamicRules from \"./DynamicRules\";\r\n// import OtherFormControls from \"./OtherFormControls\";\r\n\r\nconst Form = () => {\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <Profile/>\r\n      </Col>\r\n      {/* <Col span={24}>\r\n        <Basic/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <HorizontalLoginForm/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <Registration/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <AdvancedSearch/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <DynamicFormItem/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <TimeRelatedControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CustomizedFormControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <StoreFormData/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CustomizedValidation/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CoordinatedControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <FormLayout/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <DynamicRules/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <OtherFormControls/>\r\n      </Col> */}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default (Form);\r\n"],"sourceRoot":""}