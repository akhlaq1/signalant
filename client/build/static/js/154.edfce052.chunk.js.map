{"version":3,"sources":["routes/customViews/userAuth/LockScreen/index.js"],"names":["FormItem","Form","Item","LockScreen","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","getFieldDecorator","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","antd__WEBPACK_IMPORTED_MODULE_7__","shape","src","util_IntlMessages__WEBPACK_IMPORTED_MODULE_10__","id","antd__WEBPACK_IMPORTED_MODULE_6__","onSubmit","rules","required","message","antd__WEBPACK_IMPORTED_MODULE_8__","type","placeholder","antd__WEBPACK_IMPORTED_MODULE_9__","htmlType","Component","WrappedLockScreenForm","create"],"mappings":"8MAIMA,EAAWC,IAAKC,KAGhBC,6MAEJC,aAAe,SAACC,GACdA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,eAAe,SAACC,EAAKC,GAC9BD,GACHE,QAAQC,IAAI,4BAA6BF,8EAKtC,IACAG,EAAqBC,KAAKR,MAAMC,KAAhCM,kBAEP,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,MAAM,SAASF,UAAU,cAAcG,IAAI,yCAErDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAcC,GAAG,oCAGtBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,SAAUX,KAAKZ,aAAcgB,UAAU,8BAC3CH,EAAAC,EAAAC,cAACnB,EAAD,KACGe,EAAkB,WAAY,CAC7Ba,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,iCADnCf,CAGCE,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,KAAK,WAAWC,YAAY,eAIvChB,EAAAC,EAAAC,cAACnB,EAAD,KACEiB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQF,KAAK,UAAUG,SAAS,UAC9BlB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAcC,GAAG,oCArCRW,aAgDnBC,EAAwBpC,IAAKqC,QAALrC,CAAcE,GAE5BkC","file":"static/js/154.edfce052.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Avatar, Button, Form, Input} from \"antd\";\nimport IntlMessages from \"util/IntlMessages\";\n\nconst FormItem = Form.Item;\n\n\nclass LockScreen extends Component {\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n\n    return (\n      <div className=\"gx-login-container\">\n        <div className=\"gx-login-content gx-text-center\">\n\n          <div className=\"gx-login-header\">\n            <Avatar shape=\"circle\" className=\"gx-size-120\" src='https://via.placeholder.com/150x150'/>\n          </div>\n          <div className=\"gx-mb-4\">\n            <h3>John Smith</h3>\n            <p><IntlMessages id=\"appModule.enterPasswordUnlock\"/></p>\n          </div>\n\n          <Form onSubmit={this.handleSubmit} className=\"gx-login-form gx-form-row0\">\n            <FormItem>\n              {getFieldDecorator('password', {\n                rules: [{required: true, message: 'Please input your Password!'}],\n              })(\n                <Input type=\"password\" placeholder=\"Password\"/>\n              )}\n            </FormItem>\n\n            <FormItem>\n              <Button type=\"primary\" htmlType=\"submit\">\n                <IntlMessages id=\"app.userAuth.unLock\"></IntlMessages>\n              </Button>\n            </FormItem>\n          </Form>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedLockScreenForm = Form.create()(LockScreen);\n\nexport default (WrappedLockScreenForm);\n"],"sourceRoot":""}