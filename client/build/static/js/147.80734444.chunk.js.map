{"version":3,"sources":["routes/components/signals/ManageSignals/ManageSignalTable.js","routes/components/signals/ManageSignals/index.js"],"names":["data","key","currencypair","buyprice","sellprice","profitloss","Search","Input","Managesignals","state","filteredInfo","sortedInfo","handleChange","pagination","filters","sorter","console","log","_this","setState","clearFilters","clearAll","setAgeSort","order","columnKey","_this$state","this","columns","title","dataIndex","text","value","filteredValue","onFilter","record","includes","a","b","length","sortOrder","react_default","createElement","card","col","lg","md","sm","xs","style","textAlign","placeholder","onSearch","width","table","className","dataSource","onChange","React","Component","DataTable","row","span","ManageSignalTable"],"mappings":"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","file":"static/js/147.80734444.chunk.js","sourcesContent":["import React from \"react\";\nimport {Button, Card, Table, Input, Col} from \"antd\";\n\nconst data = [{\n    key: '1',\n    currencypair: '',\n    buyprice: '',\n    sellprice: '',\n    profitloss:''\n  },];\n  const Search = Input.Search;\nclass Managesignals extends React.Component {\n  state = {\n    filteredInfo: null,\n    sortedInfo: null,\n  };\n  handleChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n  clearFilters = () => {\n    this.setState({filteredInfo: null});\n  };\n  clearAll = () => {\n    this.setState({\n      filteredInfo: null,\n      sortedInfo: null,\n    });\n  };\n  setAgeSort = () => {\n    this.setState({\n      sortedInfo: {\n        order: 'descend',\n        columnKey: 'age',\n      },\n    });\n  };\n\n  render() {\n    let {sortedInfo, filteredInfo} = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [{\n      title: 'Currency pair',\n      dataIndex: 'currencypair',\n      key: 'currencypair',\n      filters: [\n        {text: '', value: ''}\n       \n      ],\n      filteredValue: filteredInfo.currencypair || null,\n      onFilter: (value, record) => record.currencypair.includes(value),\n      sorter: (a, b) => a.currencypair.length - b.currencypair.length,\n      sortOrder: sortedInfo.columnKey === 'currencypair' && sortedInfo.order,\n    }, {\n      title: 'Buy price with time',\n      dataIndex: 'buyprice',\n      key: 'buyprice',\n      filters: [\n        {text: '', value: ''}\n       \n      ],\n      filteredValue: filteredInfo.buyprice || null,\n      onFilter: (value, record) => record.buyprice.includes(value),\n      sorter: (a, b) => a.buyprice.length - b.buyprice.length,\n      sortOrder: sortedInfo.columnKey === 'buyprice' && sortedInfo.order,\n    }, {\n      title: 'Sell price with time',\n      dataIndex: 'sellprice',\n      key: 'sellprice',\n      filters: [\n        {text: '', value: ''},\n      \n      ],\n      filteredValue: filteredInfo.sellprice || null,\n      onFilter: (value, record) => record.sellprice.includes(value),\n      sorter: (a, b) => a.sellprice.length - b.sellprice.length,\n      sortOrder: sortedInfo.columnKey === 'sellprice' && sortedInfo.order,\n    },{\n        title: 'Profit/loss',\n        dataIndex: 'profitloss',\n        key: 'profitloss',\n        filters: [\n          {text: '', value: ''},\n         \n        ],\n        filteredValue: filteredInfo.profitloss || null,\n        onFilter: (value, record) => record.profitloss.includes(value),\n        sorter: (a, b) => a.profitloss.length - b.profitloss.length,\n        sortOrder: sortedInfo.columnKey === 'profitloss' && sortedInfo.order,\n      },\n   \n];\n    return (\n      <Card title=\"Manage Signals\">\n        {/* <div className=\"table-operations\">\n          <Button onClick={this.setAgeSort}>Sort age</Button>\n          <Button onClick={this.clearFilters}>Clear filters</Button>\n          <Button onClick={this.clearAll}>Clear filters and sorters</Button>\n        </div> */}\n      <Col lg={23} md={24} sm={24} xs={24} style={{textAlign:\"end\"}}>\n          <Search \n        placeholder=\"search here\"\n        onSearch={value => console.log(value)}\n        style={{width: 300}}\n      />\n      </Col>\n      <div>\n        <Table className=\"gx-table-responsive\" columns={columns} dataSource={data} onChange={this.handleChange}/>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default Managesignals;\n","import React from \"react\";\nimport {Col, Row} from \"antd\";\n\n// import FixHeader from \"./FixHeader\";\n// import GroupTable from \"./GroupTable\";\n// import Operation from \"./Operation\";\n// import Dynamic from \"./Dynamic\";\n// import CustomSelection from \"./CustomSelection\";\nimport Managesignals from \"./ManageSignalTable\";\n// import ExpandableRow from \"./ExpandableRow\";\n// import TreeData from \"./TreeData\";\n// import FixColumn from \"./FixColumn\";\n// import Show from \"./Show\";\n// import EditableTable from \"./Edit\";\n// import PackageTbl from \"./PackageTbl\";\n\n\n\n\n\n\nconst DataTable = () => {\n  return (\n    <Row>\n      {/* <Col span={24}>\n        <EditableTable />\n      </Col>\n      <Col span={24}>\n        <PackageTbl />\n      </Col>\n      <Col span={24}>\n        <Show />\n      </Col>\n      <Col span={24}>\n        <FixHeader/>\n      </Col>\n      <Col span={24}>\n        <GroupTable/>\n      </Col>\n      <Col span={24}>\n        <Operation/>\n      </Col>\n      <Col span={24}>\n        <Dynamic/>\n      </Col>\n      <Col span={24}>\n        <CustomSelection/>\n      </Col> */}\n      <Col span={24}>\n        <Managesignals/>\n      </Col>\n      {/* <Col span={24}>\n        <ExpandableRow/>\n      </Col>\n      <Col span={24}>\n        <TreeData/>\n      </Col>\n      <Col span={24}>\n        <FixColumn/>\n      </Col> */}\n    </Row>\n  );\n};\n\nexport default DataTable;\n"],"sourceRoot":""}